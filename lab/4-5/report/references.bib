
@inproceedings{lippmann_integrated_2019,
	location = {Tokyo, Japan},
	title = {Integrated flow for reverse engineering of nanoscale technologies},
	isbn = {978-1-4503-6007-4},
	url = {http://dl.acm.org/citation.cfm?doid=3287624.3288738},
	doi = {10.1145/3287624.3288738},
	abstract = {In view of potential risks of piracy and malicious manipulation of complex integrated circuits built in technologies of 45 nm and less, there is an increasing need for an effective and efficient process of reverse engineering. This paper provides an overview of the current process and details on a new tool for the acquisition and synthesis of large area images and the extraction of a layout. For the first time the error between the generated layout and the known drawn {GDS} will be compared quantitatively as a figure of merit ({FOM}). From this layout a circuit graph of an {ECC} encryption and the partitioning in circuit blocks will be extracted.},
	eventtitle = {the 24th Asia and South Pacific Design Automation Conference},
	pages = {82--89},
	booktitle = {Proceedings of the 24th Asia and South Pacific Design Automation Conference on - {ASPDAC} '19},
	publisher = {{ACM} Press},
	author = {Lippmann, Bernhard and Graeb, Helmut and Werner, Michael and Unverricht, Niklas and Singla, Aayush and Egger, Peter and DÃ¼botzky, Anja and Gieser, Horst and Rasche, Martin and Kellermann, Oliver},
	urldate = {2019-11-20},
	date = {2019},
	langid = {english},
	file = {Lippmann et al. - 2019 - Integrated flow for reverse engineering of nanosca.pdf:/home/carlazz/Zotero/storage/XAA8CDHI/Lippmann et al. - 2019 - Integrated flow for reverse engineering of nanosca.pdf:application/pdf}
}

@inproceedings{gupta_stageweb:_2010,
	title = {{StageWeb}: Interweaving pipeline stages into a wearout and variation tolerant {CMP} fabric},
	doi = {10.1109/DSN.2010.5544915},
	shorttitle = {{StageWeb}},
	abstract = {Manufacture-time process variation and life-time failure projections have become a major industry concern. Consequently, fault tolerance, historically of interest only for mission-critical systems, is now gaining attention in the mainstream computing space. Traditionally reliability issues have been addressed at a coarse granularity, e.g., by disabling faulty cores in chip multiprocessors. However, this is not scalable to higher failure rates. In this paper, we propose {StageWeb}, a fine-grained wearout and variation tolerance solution, that employs a reconfigurable web of replicated processor pipeline stages to construct dependable many-core chips. The interconnection flexibility of {StageWeb} simultaneously tackles wearout failures (by isolating broken stages) and process variation (by selectively disabling slower stages). Our experiments show that through its wearout tolerance, a {StageWeb} chip performs up to 70\% more cumulative work than a comparable chip multiprocessor. Further, variation mitigation in {StageWeb} enables it to scale supply voltage more aggressively, resulting in up to 16\% energy savings.},
	eventtitle = {2010 {IEEE}/{IFIP} International Conference on Dependable Systems Networks ({DSN})},
	pages = {101--110},
	booktitle = {2010 {IEEE}/{IFIP} International Conference on Dependable Systems Networks ({DSN})},
	author = {Gupta, Shantanu and Ansari, Amin and Feng, Shuguang and Mahlke, Scott},
	date = {2010-06},
	note = {{ISSN}: 2158-3927},
	keywords = {architecture, chip multiprocessors, coarse granularity, Fabrics, fault tolerance, fault tolerant computing, life-time failure projections, manufacture-time process variation, manycore chips, microprocessor chips, multicore, multiprocessing systems, permanent faults, Pipelines, process variation, reliability, {StageWeb} solution, variation tolerant {CMP} fabric, wearout tolerant {CMP} fabric},
	file = {IEEE Xplore Abstract Record:/home/carlazz/Zotero/storage/BBVSI45P/5544915.html:text/html;IEEE Xplore Full Text PDF:/home/carlazz/Zotero/storage/EIRYWTEI/Gupta et al. - 2010 - StageWeb Interweaving pipeline stages into a wear.pdf:application/pdf}
}

@inproceedings{smolens_reunion:_2006,
	location = {Washington, {DC}, {USA}},
	title = {Reunion: Complexity-Effective Multicore Redundancy},
	isbn = {978-0-7695-2732-1},
	url = {https://doi.org/10.1109/MICRO.2006.42},
	doi = {10.1109/MICRO.2006.42},
	series = {{MICRO} 39},
	shorttitle = {Reunion},
	abstract = {To protect processor logic from soft errors, multicore redundant architectures execute two copies of a program on separate cores of a chip multiprocessor ({CMP}). Maintaining identical instruction streams is challenging because redundant cores operate independently, yet must still receive the same inputs (e.g., load values and shared-memory invalidations). Past proposals strictly replicate load values across two cores, requiring significant changes to the highly-optimized core. We make the key observation that, in the common case, both cores load identical values without special hardware. When the cores do receive different load values (e.g., due to a data race), the same mechanisms employed for soft error detection and recovery can correct the difference. This observation permits designs that relax input replication, while still providing correct redundant execution. In this paper, we present Reunion, an execution model that provides relaxed input replication and preserves the existing memory interface, coherence protocols, and consistency models. We evaluate a {CMP}-based implementation of the Reunion execution model with full-system, cycle-accurate simulation. We show that the performance overhead of relaxed input replication is only 5\% and 6\% for commercial and scientific workloads, respectively.},
	pages = {223--234},
	booktitle = {Proceedings of the 39th Annual {IEEE}/{ACM} International Symposium on Microarchitecture},
	publisher = {{IEEE} Computer Society},
	author = {Smolens, Jared C. and Gold, Brian T. and Falsafi, Babak and Hoe, James C.},
	urldate = {2019-11-21},
	date = {2006},
	keywords = {computer architecture},
	file = {ACM Full Text PDF:/home/carlazz/Zotero/storage/HKRZ8XYE/Smolens et al. - 2006 - Reunion Complexity-Effective Multicore Redundancy.pdf:application/pdf}
}

@inproceedings{lafrieda_utilizing_2007,
	title = {Utilizing Dynamically Coupled Cores to Form a Resilient Chip Multiprocessor},
	doi = {10.1109/DSN.2007.100},
	abstract = {Aggressive {CMOS} scaling will make future chip multiprocessors ({CMPs}) increasingly susceptible to transient faults, hard errors, manufacturing defects, and process variations. Existing fault-tolerant {CMP} proposals that implement dual modular redundancy ({DMR}) do so by statically binding pairs of adjacent cores via dedicated communication channels and buffers. This can result in unnecessary power and performance losses in cases where one core is defective (in which case the entire {DMR} pair must be disabled), or when cores exhibit different frequency/leakage characteristics due to process variations (in which case the pair runs at the speed of the slowest core). Static {DMR} also hinders power density/thermal management, as {DMR} pairs running code with similar power/thermal characteristics are necessarily placed next to each other on the die. We present dynamic core coupling ({DCC}), an architectural technique that allows arbitrary {CMP} cores to verify each other's execution while requiring no static core binding at design time or dedicated communication hardware. Our evaluation shows that the performance overhead of {DCC} over a {CMP} without fault tolerance is 3\% on {SPEC}2000 benchmarks, and is within 5\% for a set of scalable parallel scientific and data mining applications with up to eight threads (16 processors). Our results also show that {DCC} has the potential to significantly outperform existing static {DMR} schemes.},
	eventtitle = {37th Annual {IEEE}/{IFIP} International Conference on Dependable Systems and Networks ({DSN}'07)},
	pages = {317--326},
	booktitle = {37th Annual {IEEE}/{IFIP} International Conference on Dependable Systems and Networks ({DSN}'07)},
	author = {{LaFrieda}, Christopher and Ipek, Engin and Martinez, Jose F. and Manohar, Rajit},
	date = {2007-06},
	note = {{ISSN}: 2158-3927},
	keywords = {microprocessor chips, {CMOS}, {CMOS} integrated circuits, {CMOS} process, Communication channels, dual modular redundancy, dynamically coupled cores, Energy management, Fault tolerance, Frequency, Manufacturing processes, Performance loss, Proposals, Redundancy, resilient chip multiprocessor, Thermal management},
	file = {IEEE Xplore Abstract Record:/home/carlazz/Zotero/storage/UHR4SMJG/4272983.html:text/html;IEEE Xplore Full Text PDF:/home/carlazz/Zotero/storage/25QP8H5U/LaFrieda et al. - 2007 - Utilizing Dynamically Coupled Cores to Form a Resi.pdf:application/pdf}
}

@article{gupta_stagenet:_2011,
	title = {{StageNet}: A Reconfigurable Fabric for Constructing Dependable {CMPs}},
	volume = {60},
	issn = {2326-3814},
	doi = {10.1109/TC.2010.205},
	shorttitle = {{StageNet}},
	abstract = {{CMOS} scaling has long been a source of dramatic performance gains. However, semiconductor feature size reduction has resulted in increasing levels of operating temperatures and current densities. Given that most wearout mechanisms are highly dependent on these parameters, significantly higher failure rates are projected for future technology generations. Consequently, fault tolerance, which has traditionally been a subject of interest for high-end server markets, is now getting emphasis in the mainstream computing systems space. The popular solution for this has been the use of redundancy at a coarse granularity, such as dual/triple modular redundancy. In this work, we challenge the practice of coarse-granularity redundancy by identifying its inability to scale to high failure rate scenarios and investigating the advantages of finer-grained configurations. To this end, this paper presents and evaluates a highly reconfigurable {CMP} architecture, named as {StageNet} ({SN}), that is designed with reliability as its first-class design criteria. {SN} relies on a reconfigurable network of replicated processor pipeline stages to maximize the useful lifetime of a chip, gracefully degrading performance toward the end of life. Our results show that the proposed {SN} architecture can perform 40 percent more cumulative work compared to a traditional {CMP} over 12 years of its lifetime.},
	pages = {5--19},
	number = {1},
	journaltitle = {{IEEE} Transactions on Computers},
	author = {Gupta, Shantanu and Feng, Shuguang and Ansari, Amin and Mahlke, Scott},
	date = {2011-01},
	keywords = {fault tolerance, fault tolerant computing, microprocessor chips, multicore, Pipelines, Redundancy, {CMOS} logic circuits, {CMOS} scaling, {CMP}, coarse-granularity redundancy, dependable {CMP} construction, dual-triple modular redundancy, finer-grained configurations, Multicore processing, pipeline processing, reconfigurable architectures, reconfigurable {CMP} architecture, reconfigurable fabric, Registers, Reliability, replicated processor pipeline, semiconductor feature size reduction, {StageNet}, Switches, Tin, wearout.},
	file = {IEEE Xplore Abstract Record:/home/carlazz/Zotero/storage/35MZVY8T/5601697.html:text/html;IEEE Xplore Full Text PDF:/home/carlazz/Zotero/storage/K3V96G3S/Gupta et al. - 2011 - StageNet A Reconfigurable Fabric for Constructing.pdf:application/pdf}
}

@article{borkar_platform_2005,
	title = {Platform 2015: Intel processor and platform evolution for the next decade},
	shorttitle = {Platform 2015},
	journaltitle = {Intelligence/sigart Bulletin - {SIGART}},
	shortjournal = {Intelligence/sigart Bulletin - {SIGART}},
	author = {Borkar, S. and Dubey, Pradeep and Kahn, K. and Kuck, D. and Mulder, Hans and Pawlowski, S. and Rattner, J.},
	date = {2005-01-01},
	file = {Full Text PDF:/home/carlazz/Zotero/storage/ULYKE5JM/Borkar et al. - 2005 - Platform 2015 Intel processor and platform evolut.pdf:application/pdf}
}

@online{noauthor_modeling_nodate,
	title = {Modeling the effect of technology trends on the soft error rate of combinational logic - {IEEE} Conference Publication},
	url = {https://ieeexplore.ieee.org/document/1028924},
	urldate = {2019-11-21},
	file = {Modeling the effect of technology trends on the soft error rate of combinational logic - IEEE Conference Publication:/home/carlazz/Zotero/storage/WSKXQ4N9/1028924.html:text/html}
}

@inproceedings{shivakumar_modeling_2002,
	title = {Modeling the effect of technology trends on the soft error rate of combinational logic},
	doi = {10.1109/DSN.2002.1028924},
	abstract = {This paper examines the effect of technology scaling and microarchitectural trends on the rate of soft errors in {CMOS} memory and logic circuits. We describe and validate an end-to-end model that enables us to compute the soft error rates ({SER}) for existing and future microprocessor-style designs. The model captures the effects of two important masking phenomena, electrical masking and latching-window masking, which inhibit soft errors in combinational logic. We quantify the {SER} due to high-energy neutrons in {SRAM} cells, latches, and logic circuits for feature sizes from 600 nm to 50 nm and clock periods from 16 to 6 fan-out-of-4 inverter delays. Our model predicts that the {SER} per chip of logic circuits will increase nine orders of magnitude from 1992 to 2011 and at that point will be comparable to the {SER} per chip of unprotected memory elements. Our result emphasizes that computer system designers must address the risks of soft errors in logic circuits for future designs.},
	eventtitle = {Proceedings International Conference on Dependable Systems and Networks},
	pages = {389--398},
	booktitle = {Proceedings International Conference on Dependable Systems and Networks},
	author = {Shivakumar, P. and Kistler, M. and Keckler, S.W. and Burger, D. and Alvisi, L.},
	date = {2002-06},
	note = {{ISSN}: null},
	keywords = {microprocessor chips, {CMOS} logic circuits, 50 to 600 nm, clock periods, {CMOS} memory circuits, {CMOS} technology, combinational circuits, combinational logic, computer system design, electrical masking, end-to-end model, Error analysis, high-energy neutrons, integrated circuit reliability, inverter delays, Latches, latching-window masking, logic circuits, Logic circuits, microarchitectural trends, Microarchitecture, microprocessor style designs, neutron effects, Neutrons, Random access memory, Semiconductor device modeling, soft error rate, {SRAM} cells, {SRAM} chips, technology scaling, technology trend effect modeling, unprotected memory elements},
	file = {IEEE Xplore Abstract Record:/home/carlazz/Zotero/storage/A4EGCEJZ/1028924.html:text/html;IEEE Xplore Full Text PDF:/home/carlazz/Zotero/storage/J49C7DE7/Shivakumar et al. - 2002 - Modeling the effect of technology trends on the so.pdf:application/pdf}
}

@online{noauthor_all_nodate,
	title = {All About Calma's {GDSII} Stream File Format},
	url = {https://www.artwork.com/gdsii/gdsii/},
	urldate = {2019-11-22}
}

@article{briechle_template_2001,
	title = {Template matching using fast normalized cross correlation},
	volume = {4387},
	doi = {10.1117/12.421129},
	journaltitle = {Proceedings of {SPIE} - The International Society for Optical Engineering},
	shortjournal = {Proceedings of {SPIE} - The International Society for Optical Engineering},
	author = {Briechle, Kai and Hanebeck, Uwe},
	date = {2001-03-20},
	file = {Full Text PDF:/home/carlazz/Zotero/storage/CVV3JIBT/Briechle and Hanebeck - 2001 - Template matching using fast normalized cross corr.pdf:application/pdf}
}

@online{noauthor_template_nodate,
	title = {Template matching using fast normalized cross correlation},
	url = {https://www.spiedigitallibrary.org/conference-proceedings-of-spie/4387/0000/Template-matching-using-fast-normalized-cross-correlation/10.1117/12.421129.full?SSO=1},
	urldate = {2019-11-22}
}

@online{noauthor_template_nodate-1,
	title = {Template matching using fast normalized cross correlation},
	url = {https://www.spiedigitallibrary.org/conference-proceedings-of-spie/4387/0000/Template-matching-using-fast-normalized-cross-correlation/10.1117/12.421129.full?SSO=1},
	urldate = {2019-11-22}
}

@inproceedings{fyrbiak_hardware_2017,
	title = {Hardware reverse engineering: Overview and open challenges},
	doi = {10.1109/IVSW.2017.8031550},
	shorttitle = {Hardware reverse engineering},
	abstract = {Hardware reverse engineering is a universal tool for both legitimate and illegitimate purposes. On the one hand, it supports confirmation of {IP} infringement and detection of circuit malicious manipulations, on the other hand it provides adversaries with crucial information to plagiarize designs, infringe on {IP}, or implant hardware Trojans into a target circuit. Although reverse engineering is commonplace in practice, the quantification of its complexity is an unsolved problem to date since both technical and human factors have to be accounted for. A sophisticated understanding of this complexity is crucial in order to provide a reasonable threat estimation and to develop sound countermeasures, i.e. obfuscation transformations of the target circuit, to mitigate risks for the modern {IC} landscape. The contribution of our work is threefold: first, we systematically study the current research branches related to hardware reverse engineering ranging from decapsulation to gate-level netlist analysis. Based on our overview, we formulate several open research questions to scientifically quantify reverse engineering, including technical and human factors. Second, we survey research on problem solving and on the acquisition of expertise and discuss its potential to quantify human factors in reverse engineering. Third, we propose novel directions for future interdisciplinary research encompassing both technical and psychological perspectives that hold the promise to holistically capture the complexity of hardware reverse engineering.},
	eventtitle = {2017 {IEEE} 2nd International Verification and Security Workshop ({IVSW})},
	pages = {88--94},
	booktitle = {2017 {IEEE} 2nd International Verification and Security Workshop ({IVSW})},
	author = {Fyrbiak, Marc and StrauÃ, Sebastian and Kison, Christian and Wallat, Sebastian and Elson, Malte and Rummel, Nikol and Paar, Christof},
	date = {2017-07},
	note = {{ISSN}: null},
	keywords = {circuit malicious manipulation detection, complexity quantification, decapsulation, design plagiarism, Field programmable gate arrays, gate-level netlist analysis, Hardware, hardware reverse engineering, Hardware Reverse Engineering, hardware Trojans, human factors, Human factors, {IC} landscape, integrated circuits, invasive software, {IP} infringement, Logic gates, reverse engineering, Reverse engineering, target circuit obfuscation transformations, technical factors},
	file = {IEEE Xplore Abstract Record:/home/carlazz/Zotero/storage/IX45S8QV/8031550.html:text/html;IEEE Xplore Full Text PDF:/home/carlazz/Zotero/storage/JFV87PQP/Fyrbiak et al. - 2017 - Hardware reverse engineering Overview and open ch.pdf:application/pdf}
}

@inproceedings{werner_reverse_2018,
	title = {Reverse Engineering of Cryptographic Cores by Structural Interpretation Through Graph Analysis},
	doi = {10.1109/IVSW.2018.8494896},
	abstract = {The following topics are dealt with: invasive software; cryptography; security of data; industrial property; system-on-chip; embedded systems; reverse engineering; integrated circuit design; field programmable gate arrays; microcontrollers.},
	eventtitle = {2018 {IEEE} 3rd International Verification and Security Workshop ({IVSW})},
	pages = {13--18},
	booktitle = {2018 {IEEE} 3rd International Verification and Security Workshop ({IVSW})},
	author = {Werner, Michael and Lippmann, Bernhard and Baehr, Johanna and GrÃ¤b, Helmut},
	date = {2018-07},
	note = {{ISSN}: null},
	keywords = {invasive software, Logic gates, reverse engineering, Reverse engineering, âReverse Engineering, Clustering algorithms, cryptography, embedded systems, field programmable gate arrays, Graph Analysis, Graph Clustering, industrial property, integrated circuit design, Integrated circuits, Layout, Libraries, microcontrollers, Netlist Extraction, security of data, Standards, system-on-chip},
	file = {IEEE Xplore Abstract Record:/home/carlazz/Zotero/storage/GAEX9VSQ/8494896.html:text/html;IEEE Xplore Full Text PDF:/home/carlazz/Zotero/storage/KYPJBA8X/Werner et al. - 2018 - Reverse Engineering of Cryptographic Cores by Stru.pdf:application/pdf}
}

@online{noauthor_tutorial_nodate,
	title = {Tutorial on Hardware Accelerators for Deep Neural Networks},
	url = {http://eyeriss.mit.edu/tutorial.html},
	urldate = {2019-11-24},
	file = {Tutorial on Hardware Accelerators for Deep Neural Networks:/home/carlazz/Zotero/storage/QSX6FI89/tutorial.html:text/html}
}

@article{siddique_purge-rehab:_2016,
	title = {Purge-Rehab: Eager Software Transactional Memory with High Performance Under Contention},
	volume = {44},
	issn = {1573-7640},
	url = {https://doi.org/10.1007/s10766-016-0427-4},
	doi = {10.1007/s10766-016-0427-4},
	shorttitle = {Purge-Rehab},
	abstract = {Transactional memory is a programming model that attempts to make parallel programming easier. Transactional memory uses either eager (at encounter time) or lazy (at commit time) validation to check for conflicting accesses between concurrent transactions, and researchers have been divided over which approach is best. Despite this, there is little work in the literature evaluating their comparative performance. One exploration of this topic using microbenchmarks found that lazy outperforms eager and increases its advantage as contention rises. Furthermore, eager was prone to livelock when accesses were irregular, which resulted in starvation and low throughput. We revisit the comparative performance of eager and lazy under contention using a larger set of microbenchmarks, more complex benchmarks from {STAMP}, and against multiple state-of-the-art {STMs}: word-based {RSTM}, {TinySTM} and {SwissTM}. We validate earlier findings that eager suffers from livelock, especially when accesses are irregular. This inspired Purge-Rehab: a lightweight mechanism for controlling transaction restarts in eager validation to reduce livelock and thus improve throughput and reduce starvation. Compared to lazy validation, Purge-Rehab achieves higher performance in five benchmarks, similar in four, and is lower in only one, showing that eager validation can achieve high performance under contention. Purge-Rehab is implemented in word-based {RSTM}, but is applicable to any eager {STM}.},
	pages = {1359--1383},
	number = {6},
	journaltitle = {International Journal of Parallel Programming},
	shortjournal = {Int J Parallel Prog},
	author = {Siddique, Abubakar and Ansari, Mohammad and LujÃ¡n, Mikel},
	urldate = {2019-11-24},
	date = {2016-12-01},
	langid = {english},
	keywords = {Conflict detection, Contention management, Eager validation, Lazy validation, Livelock, Software transactional memory, Starvation},
	file = {Springer Full Text PDF:/home/carlazz/Zotero/storage/WJ8WTKLZ/Siddique et al. - 2016 - Purge-Rehab Eager Software Transactional Memory w.pdf:application/pdf}
}

@inproceedings{wallat_highway_2019,
	location = {New York, {NY}, {USA}},
	title = {Highway to {HAL}: Open-sourcing the First Extendable Gate-level Netlist Reverse Engineering Framework},
	isbn = {978-1-4503-6685-4},
	url = {http://doi.acm.org/10.1145/3310273.3323419},
	doi = {10.1145/3310273.3323419},
	series = {{CF} '19},
	shorttitle = {Highway to {HAL}},
	abstract = {Since hardware oftentimes serves as the root of trust in our modern interconnected world, malicious hardware manipulations constitute a ubiquitous threat in the context of the Internet of Things ({IoT}). Hardware reverse engineering is a prevalent technique to detect such manipulations. Over the last years, an active research community has significantly advanced the field of hardware reverse engineering. Notably, many open research questions regarding the extraction of functionally correct netlists from Field Programmable Gate Arrays ({FPGAs}) or Application Specific Integrated Circuits ({ASICs}) have been tackled. In order to facilitate further analysis of recovered netlists, a software framework is required, serving as the foundation for specialized algorithms. Currently, no such framework is publicly available. Therefore, we provide the first open-source gate-library agnostic framework for gate-level netlist analysis. In this positional paper, we demonstrate the workflow of our modular framework {HAL} on the basis of two case studies and provide profound insights on its technical foundations.},
	pages = {392--397},
	booktitle = {Proceedings of the 16th {ACM} International Conference on Computing Frontiers},
	publisher = {{ACM}},
	author = {Wallat, Sebastian and Albartus, Nils and Becker, Steffen and Hoffmann, Max and Ender, Maik and Fyrbiak, Marc and Drees, Adrian and MaaÃen, Sebastian and Paar, Christof},
	urldate = {2019-11-25},
	date = {2019},
	note = {event-place: Alghero, Italy},
	keywords = {hardware reverse engineering, gate-level netlist, open-source framework},
	file = {ACM Full Text PDF:/home/carlazz/Zotero/storage/9I2Q4EPL/Wallat et al. - 2019 - Highway to HAL Open-sourcing the First Extendable.pdf:application/pdf}
}

@online{noauthor_zotero_nodate,
	title = {Zotero {\textbar} Your personal research assistant},
	url = {https://www.zotero.org/start},
	urldate = {2019-11-20},
	file = {Zotero | Your personal research assistant:/home/carlazz/Zotero/storage/WZ5I66Q7/start.html:text/html}
}

@article{chen_eyeriss:_2017,
	title = {Eyeriss: A Spatial Architecture for Energy-Efficient Dataflow for Convolutional Neural Networks},
	issn = {1937-4143},
	doi = {10.1109/MM.2017.265085944},
	shorttitle = {Eyeriss},
	abstract = {Eyeriss is a dedicated accelerator for deep neural networks ({DNNs}). It features a spatial architecture that supports an adaptive dataflow, called Row-Stationary ({RS}), which optimizes data movement in a multi-level storage hierarchy according to the shape and size of the {DNN} model. Unlike the previous work that commonly applies one-size-fits-all dataflows regardless of the data structure of the {DNN} model, we have shown quantitatively that much better results could be achieved with the highly adaptive {RS} dataflow. This analysis is made possible thanks to our framework that can systematically analyze and evaluate the system energy efficiency of different dataflows working for different shapes and sizes of {DNNs}. We observe that {DRAM} alone does not dictate energy efficiency, and optimizing the energy consumption for only a certain data type does not lead to the best overall system energy efficiency. For {AlexNet}, the {RS} dataflow is 1.4 to 2.5 times more energy efficient than existing dataflows in the convolutional layers, and at least 1.3 times more energy efficient in the fully-connected layers for batch size of at least 16.},
	pages = {1--1},
	journaltitle = {{IEEE} Micro},
	author = {Chen, Yu-Hsin and Emer, Joel and Sze, Vivienne},
	date = {2017},
	keywords = {Random access memory, Accelerators, Computer architecture, Dataflows, Deep Neural Networks, Energy consumption, Energy efficiency, Energy-Efficient Hardware, Program processors, Radio frequency, Shape, Spatial Architecture},
	file = {IEEE Xplore Abstract Record:/home/carlazz/Zotero/storage/JKTT2SN7/7948957.html:text/html;IEEE Xplore Full Text PDF:/home/carlazz/Zotero/storage/9RM5GZWF/Chen et al. - 2017 - Eyeriss A Spatial Architecture for Energy-Efficie.pdf:application/pdf}
}

@article{chen_eyeriss_2019,
	title = {Eyeriss v2: A Flexible Accelerator for Emerging Deep Neural Networks on Mobile Devices},
	url = {http://arxiv.org/abs/1807.07928},
	shorttitle = {Eyeriss v2},
	abstract = {A recent trend in {DNN} development is to extend the reach of deep learning applications to platforms that are more resource and energy constrained, e.g., mobile devices. These endeavors aim to reduce the {DNN} model size and improve the hardware processing efficiency, and have resulted in {DNNs} that are much more compact in their structures and/or have high data sparsity. These compact or sparse models are different from the traditional large ones in that there is much more variation in their layer shapes and sizes, and often require specialized hardware to exploit sparsity for performance improvement. Thus, many {DNN} accelerators designed for large {DNNs} do not perform well on these models. In this work, we present Eyeriss v2, a {DNN} accelerator architecture designed for running compact and sparse {DNNs}. To deal with the widely varying layer shapes and sizes, it introduces a highly flexible on-chip network, called hierarchical mesh, that can adapt to the different amounts of data reuse and bandwidth requirements of different data types, which improves the utilization of the computation resources. Furthermore, Eyeriss v2 can process sparse data directly in the compressed domain for both weights and activations, and therefore is able to improve both processing speed and energy efficiency with sparse models. Overall, with sparse {MobileNet}, Eyeriss v2 in a 65nm {CMOS} process achieves a throughput of 1470.6 inferences/sec and 2560.3 inferences/J at a batch size of 1, which is 12.6x faster and 2.5x more energy efficient than the original Eyeriss running {MobileNet}. We also present an analysis methodology called Eyexam that provides a systematic way of understanding the performance limits for {DNN} processors as a function of specific characteristics of the {DNN} model and accelerator design; it applies these characteristics as sequential steps to increasingly tighten the bound on the performance limits.},
	journaltitle = {{arXiv}:1807.07928 [cs]},
	author = {Chen, Yu-Hsin and Yang, Tien-Ju and Emer, Joel and Sze, Vivienne},
	urldate = {2019-11-27},
	date = {2019-05-20},
	eprinttype = {arxiv},
	eprint = {1807.07928},
	keywords = {Computer Science - Computer Vision and Pattern Recognition, Computer Science - Distributed, Parallel, and Cluster Computing},
	file = {arXiv Fulltext PDF:/home/carlazz/Zotero/storage/6NMFYU9G/Chen et al. - 2019 - Eyeriss v2 A Flexible Accelerator for Emerging De.pdf:application/pdf;arXiv.org Snapshot:/home/carlazz/Zotero/storage/KHNDA2XB/1807.html:text/html}
}

@inproceedings{harris_pragmatic_2001,
	title = {A Pragmatic Implementation of Non-blocking Linked-lists},
	url = {https://link.springer.com/chapter/10.1007/3-540-45414-4_21},
	doi = {10.1007/3-540-45414-4_21},
	abstract = {We present a new non-blocking implementation of concurrent linked-lists supporting linearizable insertion and deletion operations. The new algorithm provides substantial benefits over previous...},
	eventtitle = {International Symposium on Distributed Computing},
	pages = {300--314},
	booktitle = {Distributed Computing},
	publisher = {Springer, Berlin, Heidelberg},
	author = {Harris, Timothy L.},
	urldate = {2019-12-03},
	date = {2001-10-03},
	langid = {english},
	file = {Full Text PDF:/home/carlazz/Zotero/storage/FXPTWAAR/Harris - 2001 - A Pragmatic Implementation of Non-blocking Linked-.pdf:application/pdf}
}

@online{noauthor_tim_nodate,
	title = {Tim Harris - Multicore Semantics \& Programming},
	url = {https://docs.google.com/document/d/1SHWhYlqcf6JUvmxH18yNH8V7Qx_5aOR9pYdvO3xSACA/edit?usp=embed_facebook},
	abstract = {Locks and performance Test-and-set lock In the best case, we assume that all the treads acquire the lock only when it is available. In this case: The first processor will read the value of the lock. There will be a cache miss, so the lock will be put in the cache. The line is loaded in Exclusive ...},
	titleaddon = {Google Docs},
	urldate = {2019-12-03},
	langid = {italian}
}

@inproceedings{hendler_scalable_2004,
	title = {A scalable lock-free stack algorithm},
	isbn = {978-1-58113-840-5},
	url = {http://dl.acm.org/citation.cfm?id=1007912.1007944},
	doi = {10.1145/1007912.1007944},
	eventtitle = {Proceedings of the sixteenth annual {ACM} symposium on Parallelism in algorithms and architectures},
	pages = {206--215},
	publisher = {{ACM}},
	author = {Hendler, Danny and Shavit, Nir and Yerushalmi, Lena},
	urldate = {2019-12-03},
	date = {2004-06-27}
}

@article{watson_decade_2013,
	title = {A Decade of {OS} Access-control Extensibility},
	volume = {11},
	issn = {1542-7730},
	url = {https://doi.org/10.1145/2428616.2430732},
	doi = {10.1145/2428616.2430732},
	abstract = {Open source security foundations for mobile and embedded devices},
	pages = {20--41},
	number = {1},
	journaltitle = {Queue},
	shortjournal = {Queue},
	author = {Watson, Robert N. M.},
	urldate = {2020-01-18},
	date = {2013-01-18},
	file = {Full Text PDF:/home/carlazz/Zotero/storage/CPE9SSP5/Watson - 2013 - A Decade of OS Access-control Extensibility.pdf:application/pdf}
}

@online{noauthor_bpftrace_nodate,
	title = {bpftrace ({DTrace} 2.0) for Linux 2018},
	url = {http://www.brendangregg.com/blog/2018-10-08/dtrace-for-linux-2018.html},
	urldate = {2019-12-25}
}

@unpublished{brendan_gregg_dtrace_nodate,
	title = {From {DTrace} to Linux},
	url = {https://www.slideshare.net/brendangregg/from-dtrace-to-linux},
	abstract = {Tracing Summit 2014, DÃ¼sseldorf. What can Linux learn from {DTrace}: what went},
	type = {Technology},
	howpublished = {Technology},
	author = {{Brendan Gregg}},
	urldate = {2019-12-25}
}

@report{neville-neil_opendtrace_2018,
	title = {{OpenDTrace} Specification version 1.0},
	url = {https://www.cl.cam.ac.uk/techreports/UCAM-CL-TR-924.html},
	number = {{UCAM}-{CL}-{TR}-924},
	institution = {University of Cambridge, Computer Laboratory},
	author = {Neville-Neil, George and Anderson, Jonathan and Jenkinson, Graeme and Kidney, Brian and Stolfa, Domagoj and Thomas, Arun and Watson, Robert N. M.},
	urldate = {2019-12-23},
	date = {2018},
	langid = {english},
	file = {Full Text PDF:/home/carlazz/Zotero/storage/JKXVRM4B/Neville-Neil et al. - 2018 - OpenDTrace Specification version 1.0.pdf:application/pdf;Snapshot:/home/carlazz/Zotero/storage/MT7DKQBF/Neville-Neil et al. - 2018 - OpenDTrace Specification version 1.0.html:text/html}
}

@online{noauthor_[patch_nodate,
	title = {[{PATCH} 0/1] tools/dtrace: initial implementation of {DTrace} [{LWN}.net]},
	url = {https://lwn.net/ml/linux-kernel/201907040313.x643D8Pg025951@userv0121.oracle.com/},
	urldate = {2019-12-23}
}

@online{noauthor_bpftrace_nodate-1,
	title = {bpftrace ({DTrace} 2.0) for Linux 2018},
	url = {http://www.brendangregg.com/blog/2018-10-08/dtrace-for-linux-2018.html},
	urldate = {2019-12-23}
}

@online{noauthor_dtrace_nodate,
	title = {{DTrace} for Linux 2016},
	url = {http://www.brendangregg.com/blog/2016-10-27/dtrace-for-linux-2016.html},
	urldate = {2019-12-23}
}

@article{majeric_jtag_2018,
	title = {{JTAG} Fault Injection Attack},
	volume = {10},
	issn = {1943-0663, 1943-0671},
	url = {https://ieeexplore.ieee.org/document/8100880/},
	doi = {10.1109/LES.2017.2771206},
	abstract = {Fault injection attacks are wide spread in the domain of smart cards and microcontrollers but have not been yet democratized on complex embedded microprocessors such as system on chip ({SoC}) that can be found in smart phones, tablets and automotive systems. The main explanation is the difï¬culty involved in injecting a fault at the right place and at the right time to make these attacks effective on such devices. However for development and debugging, these devices provide new tools that could be considered as possibly enabling attacks. One of them, the {JTAG} debug tool is present on most electronic devices today. In this paper we present the ï¬rst fault injection attack based on {JTAG}. Using the example of a privilege escalation attack, we detail how this tool can be used either to check the feasibility of this attack by fault injection or to perform an actual attack.},
	pages = {65--68},
	number = {3},
	journaltitle = {{IEEE} Embedded Systems Letters},
	shortjournal = {{IEEE} Embedded Syst. Lett.},
	author = {Majeric, F. and Gonzalvo, B. and Bossuet, L.},
	urldate = {2019-12-04},
	date = {2018-09},
	langid = {english},
	file = {Majeric et al. - 2018 - JTAG Fault Injection Attack.pdf:/home/carlazz/Zotero/storage/DVKCIDER/Majeric et al. - 2018 - JTAG Fault Injection Attack.pdf:application/pdf}
}

@article{noauthor_secure_1976,
	title = {Secure Computer System: Unified Exposition and {MULTICS} Interpretation},
	url = {https://www.hsdl.org/?abstract&did=},
	shorttitle = {Secure Computer System},
	abstract = {This report summarizes, both narratively and formally, the particular version of the mathematical model that is relevant to the development of a multics security kernel. The report not only presents the model in convenient and readable form, but also explicitly relates the model to the emerging multics kernel design to help bridge the gap between the mathematical notions of the model and their counterparts in the mulitics security kernel.},
	urldate = {2020-01-18},
	date = {1976-02-29},
	langid = {english},
	file = {Snapshot:/home/carlazz/Zotero/storage/WKGGEWU6/www.hsdl.org.html:text/html}
}

@inproceedings{wagner_security_2002,
	title = {A Security Analysis of the Combex {DarpaBrowser} Architecture},
	abstract = {We describe the results of a limited-time evaluation of the security of the Combex {DarpaBrowser}, built on top of Combexâs E architecture. The goal of our review was to evaluate the security properties of the {DarpaBrowser}, and in particular, its ability to confine a malicious renderer and to enforce the security policy described in the Combex Project Plan. Our mission was to assess the architecture. We were also asked to analyze the implementation, but only for purposes of identifying whether there were implementation bugs that could not be fixed within the architecture.},
	author = {WÃ¡gner, DÃ¡vid and Tribble, D. L.},
	date = {2002},
	keywords = {Software bug}
}

@inproceedings{barth_security_2009,
	title = {The Security Architecture of the Chromium Browser},
	abstract = {Most current web browsers employ a monolithic architecture that combines âthe userâ and âthe webâ into a single protection domain. An attacker who exploits an arbitrary code execution vulnerability in such a browser can steal sensitive files or install malware. In this paper, we present the security architecture of Chromium, the open-source browser upon which Google Chrome is built. Chromium has two modules in separate protection domains: a browser kernel, which interacts with the operating system, and a rendering engine, which runs with restricted privileges in a sandbox. This architecture helps mitigate high-severity attacks without sacrificing compatibility with existing web sites. We define a threat model for browser exploits and evaluate how the architecture would have mitigated past vulnerabilities.},
	author = {Barth, Adam and Reis, Charles},
	date = {2009},
	keywords = {Arbitrary code execution, Chromium (web browser), Computer security, Google Chrome, Internet, Layout engine, Malware, Medical Device Incompatibility Problem, Open-source software, Operating system, Sandbox (computer security), Threat model}
}

@article{bell_looking_2005,
	title = {Looking back at the Bell-La Padula model},
	doi = {10.21236/ada023588},
	abstract = {Abstract : A unified narrative exposition of the {ESD}/{MITRE} computer security model is presented. A suggestive interpretation of the model in the context of Multics and a discussion of several other important topics (such as communications paths, sabotage and integrity) conclude the report. A full, formal presentation of the model is included in the Appendix.},
	pages = {15 pp.--351},
	journaltitle = {21st Annual Computer Security Applications Conference ({ACSAC}'05)},
	author = {Bell, David Elliott},
	date = {2005},
	keywords = {{CNS} disorder, Computer security model, Drawings (art), Legal patent, {LINC}, Multics, Operation Payback, Providing (action), Specification}
}

@online{noauthor_note_nodate,
	title = {A note on the confinement problem {\textbar} Semantic Scholar},
	url = {/paper/A-note-on-the-confinement-problem-Lampson/3aa7fa1563467801db724b046df439dc33de2407},
	abstract = {onfining a program during its execution so that it cannot transmit information to any other program except its caller. A set of examples attempts to stake out the boundaries of the problem. Necessary conditions for a solution are stated and informally justified.},
	urldate = {2020-01-19},
	langid = {english},
	file = {Snapshot:/home/carlazz/Zotero/storage/8NEPFDYX/3aa7fa1563467801db724b046df439dc33de2407.html:text/html}
}

@article{lampson_note_1973,
	title = {A note on the confinement problem},
	volume = {16},
	issn = {0001-0782},
	url = {https://doi.org/10.1145/362375.362389},
	doi = {10.1145/362375.362389},
	abstract = {onfining a program during its execution so that it cannot transmit information to any other program except its caller. A set of examples attempts to stake out the boundaries of the problem. Necessary conditions for a solution are stated and informally justified.},
	pages = {613--615},
	number = {10},
	journaltitle = {Communications of the {ACM}},
	shortjournal = {Commun. {ACM}},
	author = {Lampson, Butler W.},
	urldate = {2020-01-19},
	date = {1973-10-01},
	keywords = {confinement, leakage of data, privacy, proprietary program, protection, security},
	file = {Full Text PDF:/home/carlazz/Zotero/storage/P2QQL92E/Lampson - 1973 - A note on the confinement problem.pdf:application/pdf}
}

@article{biba_integrity_1977,
	title = {Integrity Considerations for Secure Computer Systems},
	abstract = {An integrity policy defines formal access constraints which, if effectively enforced, protect data from improper modification. The author identifies the integrity problems posed by a secure military computer utility. Integrity policies addressing these problems are developed and their effectiveness evaluated. A prototype secure computer utility, Multics, is then used as a testbed for the application of the developed access controls.},
	pages = {68},
	author = {Biba, Ken},
	date = {1977-04-01},
	file = {Full Text PDF:/home/carlazz/Zotero/storage/H56389CQ/Biba - 1977 - Integrity Considerations for Secure Computer Syste.pdf:application/pdf}
}

@online{noauthor_exploiting_nodate,
	title = {Exploiting concurrency vulnerabilities in system call wrappers {\textbar} Proceedings of the first {USENIX} workshop on Offensive Technologies},
	url = {https://dl.acm.org/doi/10.5555/1323276.1323278},
	urldate = {2020-01-19},
	file = {Exploiting concurrency vulnerabilities in system call wrappers | Proceedings of the first USENIX workshop on Offensive Technologies:/home/carlazz/Zotero/storage/VTQX36D6/1323276.html:text/html}
}

@article{bell_looking_2005-1,
	title = {Looking back at the Bell-La Padula model},
	abstract = {Most current web browsers employ a monolithic architecture that combines âthe userâ and âthe webâ into a single protection domain. An attacker who exploits an arbitrary code execution vulnerability in such a browser can steal sensitive files or install malware. In this paper, we present the security architecture of Chromium, the open-source browser upon which Google Chrome is built. Chromium has two modules in separate protection domains: a browser kernel, which interacts with the operating system, and a rendering engine, which runs with restricted privileges in a sandbox. This architecture helps mitigate high-severity attacks without sacrificing compatibility with existing web sites. We define a threat model for browser exploits and evaluate how the architecture would have mitigated past vulnerabilities.},
	pages = {15 pp.--351},
	journaltitle = {21st Annual Computer Security Applications Conference ({ACSAC}'05)},
	author = {Bell, David Elliott},
	date = {2005},
	keywords = {Arbitrary code execution, Chromium (web browser), Computer security, Google Chrome, Internet, Layout engine, Malware, Medical Device Incompatibility Problem, Open-source software, Operating system, Sandbox (computer security), Threat model}
}

@inproceedings{heuser_asm_2014,
	title = {\{{ASM}\}: A Programmable Interface for Extending Android Security},
	isbn = {978-1-931971-15-7},
	url = {https://www.usenix.org/conference/usenixsecurity14/technical-sessions/presentation/heuser},
	shorttitle = {\{{ASM}\}},
	eventtitle = {23rd \{{USENIX}\} Security Symposium (\{{USENIX}\} Security 14)},
	pages = {1005--1019},
	author = {Heuser, Stephan and Nadkarni, Adwait and Enck, William and Sadeghi, Ahmad-Reza},
	urldate = {2020-01-20},
	date = {2014},
	langid = {english},
	file = {Full Text PDF:/home/carlazz/Zotero/storage/LBF3JC4B/Heuser et al. - 2014 - \{ASM\} A Programmable Interface for Extending Andr.pdf:application/pdf;Snapshot:/home/carlazz/Zotero/storage/59BK3QBU/heuser.html:text/html}
}

@inproceedings{thomas_security_2018,
	title = {Security During Application Development: an Application Security Expert Perspective},
	doi = {10.1145/3173574.3173836},
	shorttitle = {Security During Application Development},
	abstract = {Many of the security problems that people face today, such as security breaches and data theft, are caused by security vulnerabilities in application source code. Thus, there is a need to understand and improve the experiences of those who can prevent such vulnerabilities in the first place - software developers as well as application security experts. Several studies have examined developers' perceptions and behaviors regarding security vulnerabilities, demonstrating the challenges they face in performing secure programming and utilizing tools for vulnerability detection. We expand upon this work by focusing on those primarily responsible for application security - security auditors. In an interview study of 32 application security experts, we examine their views on application security processes, their workflows, and their interactions with developers in order to further inform the design of tools and processes to improve application security.},
	booktitle = {{CHI} '18},
	author = {Thomas, Tyler W. and Tabassum, Madiha and Chu, Bill and Lipford, Heather},
	date = {2018},
	keywords = {Application security, Data theft, Interaction, Software developer, Vulnerability (computing)}
}

@inproceedings{fischer_stack_2017,
	title = {Stack Overflow Considered Harmful? The Impact of Copy Paste on Android Application Security},
	doi = {10.1109/SP.2017.31},
	shorttitle = {Stack Overflow Considered Harmful?},
	abstract = {Online programming discussion platforms such as Stack Overflow serve as a rich source of information for software developers. Available information include vibrant discussions and oftentimes ready-to-use code snippets. Previous research identified Stack Overflow as one of the most important information sources developers rely on. Anecdotes report that software developers copy and paste code snippets from those information sources for convenience reasons. Such behavior results in a constant flow of community-provided code snippets into production software. To date, the impact of this behaviour on code security is unknown. We answer this highly important question by quantifying the proliferation of security-related code snippets from Stack Overflow in Android applications available on Google Play. Access to the rich source of information available on Stack Overflow including ready-to-use code snippets provides huge benefits for software developers. However, when it comes to code security there are some caveats to bear in mind: Due to the complex nature of code security, it is very difficult to provide ready-to-use and secure solutions for every problem. Hence, integrating a security-related code snippet from Stack Overflow into production software requires caution and expertise. Unsurprisingly, we observed insecure code snippets being copied into Android applications millions of users install from Google Play every day. To quantitatively evaluate the extent of this observation, we scanned Stack Overflow for code snippets and evaluated their security score using a stochastic gradient descent classifier. In order to identify code reuse in Android applications, we applied state-of-the-art static analysis. Our results are alarming: 15.4\% of the 1.3 million Android applications we analyzed, contained security-related code snippets from Stack Overflow. Out of these 97.9\% contain at least one insecure code snippet.},
	eventtitle = {2017 {IEEE} Symposium on Security and Privacy ({SP})},
	pages = {121--136},
	booktitle = {2017 {IEEE} Symposium on Security and Privacy ({SP})},
	author = {Fischer, Felix and BÃ¶ttinger, Konstantin and Xiao, Huang and Stransky, Christian and Acar, Yasemin and Backes, Michael and Fahl, Sascha},
	date = {2017-05},
	note = {{ISSN}: 2375-1207},
	keywords = {Libraries, security of data, Android (operating system), Android application security, Android Application Security, Androids, code security, code snippets, copy \& paste behavior, Cryptography, Google, Google Play, gradient methods, Humanoid robots, information source, online programming discussion platforms, pattern classification, production software, program diagnostics, Software, software developers, Software Development, software engineering, stack overflow, Stack Overflow, static analysis, stochastic gradient descent classifier, stochastic processes},
	file = {IEEE Xplore Abstract Record:/home/carlazz/Zotero/storage/AAAKNIXM/Fischer et al. - 2017 - Stack Overflow Considered Harmful The Impact of C.html:text/html;IEEE Xplore Full Text PDF:/home/carlazz/Zotero/storage/XIU6SPGP/Fischer et al. - 2017 - Stack Overflow Considered Harmful The Impact of C.pdf:application/pdf}
}

@article{li_coconut_2018,
	title = {Coconut: An {IDE} Plugin for Developing Privacy-Friendly Apps},
	volume = {2},
	url = {https://doi.org/10.1145/3287056},
	doi = {10.1145/3287056},
	shorttitle = {Coconut},
	abstract = {Although app developers are responsible for protecting users' privacy, this task can be very challenging. In this paper, we present Coconut, an Android Studio plugin that helps developers handle privacy requirements by engaging developers to think about privacy during the development process and providing real-time feedback on potential privacy issues. We start by presenting new findings based on a series of semi-structured interviews with Android developers, probing into the difficulties with privacy that developers face when building apps. Based on these findings, we implemented a proof-of-concept prototype of Coconut and evaluated it in a controlled lab study with 18 Android developers (including eight professional developers). Our study results suggest that apps developed with Coconut handled privacy concerns better, and the developers that used Coconut had a better understanding of their code's behavior and wrote a better privacy policy for their app. We also found that requiring developers to do a small amount of annotating work regarding their apps' personal data practices during the development process may result in a significant improvement in app privacy.},
	pages = {178:1--178:35},
	number = {4},
	journaltitle = {Proceedings of the {ACM} on Interactive, Mobile, Wearable and Ubiquitous Technologies},
	shortjournal = {Proc. {ACM} Interact. Mob. Wearable Ubiquitous Technol.},
	author = {Li, Tianshi and Agarwal, Yuvraj and Hong, Jason I.},
	urldate = {2020-01-23},
	date = {2018-12-27},
	keywords = {privacy, Android development, human-centered methods, programming environment},
	file = {Full Text PDF:/home/carlazz/Zotero/storage/IQKHFSG7/Li et al. - 2018 - Coconut An IDE Plugin for Developing Privacy-Frie.pdf:application/pdf}
}

@inproceedings{fischer_stack_2019,
	title = {Stack Overflow Considered Helpful! Deep Learning Security Nudges Towards Stronger Cryptography},
	abstract = {Stack Overflow is the most popular discussion platform for software developers. However, recent research identified a large amount of insecure encryption code in production systems that has been inspired by examples given on Stack Overflow. By copying and pasting functional code, developers introduced exploitable software vulnerabilities into security-sensitive high-profile applications installed by millions of users every day. Proposed mitigations of this problem suffer from usability flaws and push developers to continue shopping for code examples on Stack Overflow once again. This motivates us to fight the proliferation of insecure code directly at the root before it even reaches the clipboard. By viewing Stack Overflow as a market, implementation of cryptography becomes a decision-making problem. In this context, our goal is to simplify the selection of helpful and secure examples. More specifically, we focus on supporting software developers in making better decisions on Stack Overflow by applying nudges, a concept borrowed from behavioral economics and psychology. This approach is motivated by one of our key findings: For 99.37\% of insecure code examples on Stack Overflow, similar alternatives are available that serve the same use case and provide strong cryptography. Our system design that modifies Stack Overflow is based on several nudges that are controlled by a deep neural network. It learns a representation for cryptographic {API} usage patterns and classification of their security, achieving average {AUC}-{ROC} of 0.992. With a user study, we demonstrate that nudge-based security advice significantly helps tackling the most popular and error-prone cryptographic use cases in Android.},
	booktitle = {{USENIX} Security Symposium},
	author = {Fischer, Felix A. and Xiao, Huang and Kao, Ching-yu and Stachelscheid, Yannick and Johnson, Benjamin and Razar, Danial and Fawkesley, Paul and Buckley, Nat and BÃ¶ttinger, Konstantin and Muntean, Paul and Grossklags, Jens},
	date = {2019},
	keywords = {Software developer, Vulnerability (computing), Stack Overflow, Application programming interface, Area Under Curve, Artificial neural network, Biological Neural Networks, Cognitive dimensions of notations, Cut, copy, and paste, Decision Making, Deep learning, Encryption, Inspiration function, Microsoft {CryptoAPI}, Nudge (instant messaging), Strong cryptography, Systems design, Usability testing}
}

@inproceedings{tahaei_survey_2019,
	title = {A Survey on Developer-Centred Security},
	doi = {10.1109/EuroSPW.2019.00021},
	abstract = {Software developers are key players in the security ecosystem as they produce code that runs on millions of devices. Yet we continue to see insecure code being developed and deployed on a regular basis despite the existence of support infrastructures, tools, and research into common errors. This work provides a systematised overview of the relatively new field of Developer-Centred Security which aims to understand the context in which developers produce security-relevant code as well as provide tools and processes that that better support both developers and secure code production. We report here on a systematic literature review of 49 publications on security studies with software developer participants. We provide an overview of both the types of methodologies currently being used as well as the current research in the area. Finally, we also provide recommendations for future work in Developer-Centred Security.},
	eventtitle = {2019 {IEEE} European Symposium on Security and Privacy Workshops ({EuroS} {PW})},
	pages = {129--138},
	booktitle = {2019 {IEEE} European Symposium on Security and Privacy Workshops ({EuroS} {PW})},
	author = {Tahaei, Mohammad and Vaniea, Kami},
	date = {2019-06},
	note = {{ISSN}: null},
	keywords = {security of data, Software Development, software engineering, Computer Security, developer-centred security, Developers, Human Computer Interaction, Human Factors, insecure code, secure code production, security ecosystem, security studies, security-relevant code, software developer participants, software tools, source code (software), Survey, Systematic Literature Review, Usable Security and Privacy},
	file = {IEEE Xplore Abstract Record:/home/carlazz/Zotero/storage/T739VQ8K/Tahaei and Vaniea - 2019 - A Survey on Developer-Centred Security.html:text/html;IEEE Xplore Full Text PDF:/home/carlazz/Zotero/storage/F4FWNNWT/Tahaei and Vaniea - 2019 - A Survey on Developer-Centred Security.pdf:application/pdf}
}

@inproceedings{jenkins_i_2019,
	title = {âI Donât Know Too Much About Itâ: On the Security Mindsets of Computer Science Students},
	shorttitle = {âI Donât Know Too Much About Itâ},
	abstract = {The security attitudes and approaches of software developers have a large impact on the software they produce, yet we know very little about how and when these views are constructed. This paper investigates the security and privacy (S\&P) perceptions, experiences, and practices of current Computer Science students at the graduate and undergraduate level using semi-structured interviews. We find that the attitudes of students already match many of those that have been observed in professional level developers. Students have a range of hacker and attack mindsets, lack of experience with security {APIs}, a mixed view of who is in charge of S\&P in the software life cycle, and a tendency to trust other peoplesâ code as a convenient approach to rapidly build software. We discuss the impact of our results on both curriculum development and support for professional developers.},
	author = {Jenkins, A. and Vaniea, Kami and Wolters, Maria},
	date = {2019}
}

@inproceedings{nguyen_stitch_2017,
	location = {Dallas, Texas, {USA}},
	title = {A Stitch in Time: Supporting Android Developers in {WritingSecure} Code},
	isbn = {978-1-4503-4946-8},
	url = {https://doi.org/10.1145/3133956.3133977},
	doi = {10.1145/3133956.3133977},
	series = {{CCS} '17},
	shorttitle = {A Stitch in Time},
	abstract = {Despite security advice in the official documentation and an extensive body of security research about vulnerabilities and exploits, many developers still fail to write secure Android applications. Frequently, Android developers fail to adhere to security best practices, leaving applications vulnerable to a multitude of attacks. We point out the advantage of a low-time-cost tool both to teach better secure coding and to improve app security. Using the {FixDroid} {IDE} plug-in, we show that professional and hobby app developers can work with and learn from an in-environment tool without it impacting their normal work; and by performing studies with both students and professional developers, we identify key {UI} requirements and demonstrate that code delivered with such a tool by developers previously inexperienced in security contains significantly less security problems. Perfecting and adding such tools to the Android development environment is an essential step in getting both security and privacy for the next generation of apps.},
	pages = {1065--1077},
	booktitle = {Proceedings of the 2017 {ACM} {SIGSAC} Conference on Computer and Communications Security},
	publisher = {Association for Computing Machinery},
	author = {Nguyen, Duc Cuong and Wermke, Dominik and Acar, Yasemin and Backes, Michael and Weir, Charles and Fahl, Sascha},
	urldate = {2020-01-23},
	date = {2017-10-30},
	keywords = {android security, cryptographic api, support developers, usable security},
	file = {Full Text PDF:/home/carlazz/Zotero/storage/F9JEQIKH/Nguyen et al. - 2017 - A Stitch in Time Supporting Android Developers in.pdf:application/pdf}
}

@inproceedings{acar_you_2016,
	title = {You Get Where You're Looking for: The Impact of Information Sources on Code Security},
	doi = {10.1109/SP.2016.25},
	shorttitle = {You Get Where You're Looking for},
	abstract = {Vulnerabilities in Android code â including but not limited to insecure data storage, unprotected inter-component communication, broken {TLS} implementations, and violations of least privilege â have enabled real-world privacy leaks and motivated research cataloguing their prevalence and impact. Researchers have speculated that appification promotes security problems, as it increasingly allows inexperienced laymen to develop complex and sensitive apps. Anecdotally, Internet resources such as Stack Overflow are blamed for promoting insecure solutions that are naively copy-pasted by inexperienced developers. In this paper, we for the first time systematically analyzed how the use of information resources impacts code security. We first surveyed 295 app developers who have published in the Google Play market concerning how they use resources to solve security-related problems. Based on the survey results, we conducted a lab study with 54 Android developers (students and professionals), in which participants wrote security-and privacy-relevant code under time constraints. The participants were assigned to one of four conditions: free choice of resources, Stack Overflow only, official Android documentation only, or books only. Those participants who were allowed to use only Stack Overflow produced significantly less secure code than those using, the official Android documentation or books, while participants using the official Android documentation produced significantly less functional code than those using Stack Overflow. To assess the quality of Stack Overflow as a resource, we surveyed the 139 threads our participants accessed during the study, finding that only 25\% of them were helpful in solving the assigned tasks and only 17\% of them contained secure code snippets. In order to obtain ground truth concerning the prevalence of the secure and insecure code our participants wrote in the lab study, we statically analyzed a random sample of 200,000 apps from Google Play, finding that 93.6\% of the apps used at least one of the {API} calls our participants used during our study. We also found that many of the security errors made by our participants also appear in the wild, possibly also originating in the use of Stack Overflow to solve programming problems. Taken together, our results confirm that {API} documentation is secure but hard to use, while informal documentation such as Stack Overflow is more accessible but often leads to insecurity. Given time constraints and economic pressures, we can expect that Android developers will continue to choose those resources that are easiest to use, therefore, our results firmly establish the need for secure-but-usable documentation.},
	eventtitle = {2016 {IEEE} Symposium on Security and Privacy ({SP})},
	pages = {289--305},
	booktitle = {2016 {IEEE} Symposium on Security and Privacy ({SP})},
	author = {Acar, Yasemin and Backes, Michael and Fahl, Sascha and Kim, Doowon and Mazurek, Michelle L. and Stransky, Christian},
	date = {2016-05},
	note = {{ISSN}: 2375-1207},
	keywords = {security of data, security, Android (operating system), Androids, code security, Humanoid robots, information source, Stack Overflow, source code (software), Android, Android code vulnerability, Android developer, {API} documentation, application program interface, application program interfaces, data privacy, developer resources, developer study, Documentation, Mobile communication, mobile computing, mobile device, Privacy, privacy leak, Programming, Security, usability},
	file = {IEEE Xplore Abstract Record:/home/carlazz/Zotero/storage/MCGNQPEK/7546508.html:text/html;IEEE Xplore Full Text PDF:/home/carlazz/Zotero/storage/QET9F3GC/Acar et al. - 2016 - You Get Where You're Looking for The Impact of In.pdf:application/pdf}
}

@inproceedings{oltrogge_pin_2015,
	title = {To Pin or Not to PinâHelping App Developers Bullet Proof Their \{{TLS}\} Connections},
	isbn = {978-1-931971-23-2},
	url = {https://www.usenix.org/node/190899},
	eventtitle = {24th \{{USENIX}\} Security Symposium (\{{USENIX}\} Security 15)},
	pages = {239--254},
	author = {Oltrogge, Marten and Acar, Yasemin and Dechand, Sergej and Smith, Matthew and Fahl, Sascha},
	urldate = {2020-01-23},
	date = {2015},
	langid = {english},
	file = {Full Text PDF:/home/carlazz/Zotero/storage/P8D2X5KU/Oltrogge et al. - 2015 - To Pin or Not to PinâHelping App Developers Bullet.pdf:application/pdf}
}

@inproceedings{fahl_rethinking_2013,
	location = {Berlin, Germany},
	title = {Rethinking {SSL} development in an appified world},
	isbn = {978-1-4503-2477-9},
	url = {https://doi.org/10.1145/2508859.2516655},
	doi = {10.1145/2508859.2516655},
	series = {{CCS} '13},
	abstract = {The Secure Sockets Layer ({SSL}) is widely used to secure data transfers on the Internet. Previous studies have shown that the state of non-browser {SSL} code is catastrophic across a large variety of desktop applications and libraries as well as a large selection of Android apps, leaving users vulnerable to Man-in-the-Middle attacks ({MITMAs}). To determine possible causes of {SSL} problems on all major appified platforms, we extended the analysis to the walled-garden ecosystem of {iOS}, analyzed software developer forums and conducted interviews with developers of vulnerable apps. Our results show that the root causes are not simply careless developers, but also limitations and issues of the current {SSL} development paradigm. Based on our findings, we derive a proposal to rethink the handling of {SSL} in the appified world and present a set of countermeasures to improve the handling of {SSL} using Android as a blueprint for other platforms. Our countermeasures prevent developers from willfully or accidentally breaking {SSL} certificate validation, offer support for extended features such as {SSL} Pinning and different {SSL} validation infrastructures, and protect users. We evaluated our solution against 13,500 popular Android apps and conducted developer interviews to judge the acceptance of our approach and found that our solution works well for all investigated apps and developers.},
	pages = {49--60},
	booktitle = {Proceedings of the 2013 {ACM} {SIGSAC} conference on Computer \& communications security},
	publisher = {Association for Computing Machinery},
	author = {Fahl, Sascha and Harbach, Marian and Perl, Henning and Koetter, Markus and Smith, Matthew},
	urldate = {2020-01-24},
	date = {2013-11-04},
	keywords = {security, android, apps, ios, mitma, {SSL}},
	file = {Full Text PDF:/home/carlazz/Zotero/storage/3X694X55/Fahl et al. - 2013 - Rethinking SSL development in an appified world.pdf:application/pdf}
}

@online{donovan_copying_2019,
	title = {Copying code from Stack Overflow? You might paste security vulnerabilities, too},
	url = {https://stackoverflow.blog/2019/11/26/copying-code-from-stack-overflow-you-might-be-spreading-security-vulnerabilities/},
	shorttitle = {Copying code from Stack Overflow?},
	abstract = {Copying code itself isnât always a bad thing. Code reuse can promote efficiency in software development; why solve a problem that has already been solved well? But when the developers use example code without trying to understand the implications of it, thatâs when problems can arise.},
	titleaddon = {Stack Overflow Blog},
	author = {Donovan, Ryan},
	urldate = {2020-01-24},
	date = {2019-11-26},
	langid = {american},
	file = {Snapshot:/home/carlazz/Zotero/storage/JQTZ8N3B/copying-code-from-stack-overflow-you-might-be-spreading-security-vulnerabilities.html:text/html}
}

@software{paper-materials-crowd-sourced_paper-materials-crowd-sourcedmaterials_2020,
	title = {paper-materials-crowd-sourced/materials},
	url = {https://github.com/paper-materials-crowd-sourced/materials},
	abstract = {Contribute to paper-materials-crowd-sourced/materials development by creating an account on {GitHub}.},
	author = {paper-materials-crowd-sourced},
	urldate = {2020-01-26},
	date = {2020-01-21},
	note = {original-date: 2019-08-13T07:55:30Z}
}

@article{whitten_why_nodate,
	title = {Why Johnny Canât Encrypt: A Usability Evaluation of {PGP} 5.0},
	pages = {15},
	author = {Whitten, Alma and Tygar, J D},
	langid = {english},
	file = {Whitten and Tygar - Why Johnny Canât Encrypt A Usability Evaluation o.pdf:/home/carlazz/Zotero/storage/PGW5XL8E/Whitten and Tygar - Why Johnny Canât Encrypt A Usability Evaluation o.pdf:application/pdf}
}

@article{herley_more_2014,
	title = {More is Not the Answer},
	url = {https://www.microsoft.com/en-us/research/publication/more-is-not-the-answer/},
	abstract = {In this paper we explore why progress has been slow and examine several possible directions. First, the scale and diversity of the web makes one-size fifits all approaches hard. Second, the competition for user attention is fierce: there are no pools of unexploited user effort to be had. Third, persuasion is the only tool we â¦},
	journaltitle = {{IEEE} Security and Privacy magazine},
	author = {Herley, Cormac},
	urldate = {2020-01-26},
	date = {2014-01-01},
	langid = {american},
	file = {Full Text PDF:/home/carlazz/Zotero/storage/GGTGCZAE/Herley - 2014 - More is Not the Answer.pdf:application/pdf;Snapshot:/home/carlazz/Zotero/storage/BQQNRVKC/more-is-not-the-answer.html:text/html}
}

@online{noauthor_appsealer_nodate,
	title = {{AppSealer}: Automatic Generation of Vulnerability-Specific Patches for Preventing Component Hijacking Attacks in Android Applications â {NDSS} Symposium},
	url = {https://www.ndss-symposium.org/ndss2014/programme/appsealer-automatic-generation-vulnerability-specific-patches-preventing-component-hijacking/},
	shorttitle = {{AppSealer}},
	urldate = {2020-01-27},
	langid = {american},
	file = {Snapshot:/home/carlazz/Zotero/storage/8SIDLP9S/appsealer-automatic-generation-vulnerability-specific-patches-preventing-component-hijacking.html:text/html}
}

@online{noauthor_mobile_nodate,
	title = {Mobile Application Security Solutions {\textbar} No Coding Required},
	url = {https://www.appsealing.com/},
	abstract = {{AppSealing} provides Mobile Application Security as a service. Apply Runtime Application Self Protection ({RASP}) features to any app in minutes - No Coding/{SDK}.},
	titleaddon = {Appsealing},
	urldate = {2020-01-27},
	langid = {american},
	file = {Snapshot:/home/carlazz/Zotero/storage/NXM7HVD2/www.appsealing.com.html:text/html}
}

@inproceedings{zhang_appsealer_2014,
	title = {{AppSealer}: Automatic Generation of Vulnerability-Specific Patches for Preventing Component Hijacking Attacks in Android Applications.},
	shorttitle = {{AppSealer}},
	booktitle = {{NDSS}},
	author = {Zhang, Mu and Yin, Heng},
	date = {2014},
	file = {Full Text:/home/carlazz/Zotero/storage/VHV8H5Q7/Zhang and Yin - 2014 - AppSealer Automatic Generation of Vulnerability-S.pdf:application/pdf}
}

@article{cantrill_dynamic_nodate,
	title = {Dynamic Instrumentation of Production Systems},
	abstract = {This paper presents {DTrace}, a new facility for dynamic instrumentation of production systems. {DTrace} features the ability to dynamically instrument both user-level and kernel-level software in a uniï¬ed and absolutely safe fashion. When not explicitly enabled, {DTrace} has zero probe effect â the system operates exactly as if {DTrace} were not present at all. {DTrace} allows for many tens of thousands of instrumentation points, with even the smallest of systems offering on the order of 30,000 such points in the kernel alone. We have developed a C-like high-level control language to describe the predicates and actions at a given point of instrumentation. The language features user-deï¬ned variables, including threadlocal variables and associative arrays. To eliminate the need for most postprocessing, the facility features a scalable mechanism for aggregating data and a mechanism for speculative tracing. {DTrace} has been integrated into the Solaris operating system and has been used to ï¬nd serious systemic performance problems on production systems â problems that could not be found using preexisting facilities.},
	pages = {15},
	author = {Cantrill, Bryan M and Shapiro, Michael W and Leventhal, Adam H},
	langid = {english},
	file = {Cantrill et al. - Dynamic Instrumentation of Production Systems.pdf:/home/carlazz/Zotero/storage/WE3ETDFU/Cantrill et al. - Dynamic Instrumentation of Production Systems.pdf:application/pdf}
}

@online{noauthor_cantrill_nodate,
	title = {Cantrill, et al. 2004 - Google Scholar},
	url = {https://scholar.google.co.uk/scholar?q=Cantrill,+et+al.+2004&hl=en&as_sdt=0&as_vis=1&oi=scholart},
	urldate = {2020-01-27}
}

@article{narayanan_how_2006,
	title = {How to break anonymity of the netflix prize dataset},
	journaltitle = {{arXiv} preprint cs/0610105},
	author = {Narayanan, Arvind and Shmatikov, Vitaly},
	date = {2006},
	file = {Full Text:/home/carlazz/Zotero/storage/SRC5UNPM/Narayanan and Shmatikov - 2006 - How to break anonymity of the netflix prize datase.pdf:application/pdf;Snapshot:/home/carlazz/Zotero/storage/QJ2DM7G3/Narayanan and Shmatikov - 2006 - How to break anonymity of the netflix prize datase.html:text/html}
}

@inproceedings{dwork_calibrating_2006,
	title = {Calibrating noise to sensitivity in private data analysis},
	pages = {265--284},
	booktitle = {Theory of cryptography conference},
	publisher = {Springer},
	author = {Dwork, Cynthia and {McSherry}, Frank and Nissim, Kobbi and Smith, Adam},
	date = {2006},
	file = {Full Text:/home/carlazz/Zotero/storage/EMURDEE4/Dwork et al. - 2006 - Calibrating noise to sensitivity in private data a:application/octet-stream}
}

@article{adam_security-control_1989,
	title = {Security-control methods for statistical databases: a comparative study},
	volume = {21},
	shorttitle = {Security-control methods for statistical databases},
	pages = {515--556},
	number = {4},
	journaltitle = {{ACM} Computing Surveys ({CSUR})},
	author = {Adam, Nabil R. and Worthmann, John C.},
	date = {1989},
	file = {Full Text:/home/carlazz/Zotero/storage/5HEI87VN/Adam and Worthmann - 1989 - Security-control methods for statistical databases:application/octet-stream}
}

@inproceedings{dwork_differential_2008,
	location = {Berlin, Heidelberg},
	title = {Differential Privacy: A Survey of Results},
	isbn = {978-3-540-79228-4},
	doi = {10.1007/978-3-540-79228-4_1},
	series = {Lecture Notes in Computer Science},
	shorttitle = {Differential Privacy},
	abstract = {Over the past five years a new approach to privacy-preserving data analysis has born fruit [13, 18, 7, 19, 5, 37, 35, 8, 32]. This approach differs from much (but not all!) of the related literature in the statistics, databases, theory, and cryptography communities, in that a formal and ad omnia privacy guarantee is defined, and the data analysis techniques presented are rigorously proved to satisfy the guarantee. The key privacy guarantee that has emerged is differential privacy. Roughly speaking, this ensures that (almost, and quantifiably) no risk is incurred by joining a statistical database.In this survey, we recall the definition of differential privacy and two basic techniques for achieving it. We then show some interesting applications of these techniques, presenting algorithms for three specific tasks and three general results on differentially private learning.},
	pages = {1--19},
	booktitle = {Theory and Applications of Models of Computation},
	publisher = {Springer},
	author = {Dwork, Cynthia},
	editor = {Agrawal, Manindra and Du, Dingzhu and Duan, Zhenhua and Li, Angsheng},
	date = {2008},
	langid = {english},
	keywords = {Differential Privacy, Privacy Mechanism, Statistical Database, Statistical Query, True Answer},
	file = {Springer Full Text PDF:/home/carlazz/Zotero/storage/Z7QESVXY/Dwork - 2008 - Differential Privacy A Survey of Results.pdf:application/pdf}
}

@article{noauthor_pointer_nodate,
	title = {Pointer Authentication on {ARMv}8.3: Design and Analysis of the New Software Security Instructions},
	pages = {12},
	langid = {english},
	file = {Pointer Authentication on ARMv8.3 Design and Anal.pdf:/home/carlazz/Zotero/storage/VTCYUQQR/Pointer Authentication on ARMv8.3 Design and Anal.pdf:application/pdf}
}

@article{thompson_opinion_2019,
	title = {Opinion {\textbar} Twelve Million Phones, One Dataset, Zero Privacy},
	issn = {0362-4331},
	url = {https://www.nytimes.com/interactive/2019/12/19/opinion/location-tracking-cell-phone.html},
	abstract = {What we learned from the spy in your pocket.},
	journaltitle = {The New York Times},
	author = {Thompson, Stuart A. and Warzel, Charlie},
	urldate = {2020-02-02},
	date = {2019-12-19},
	langid = {american},
	keywords = {Privacy, Data-Mining and Database Marketing, Regulation and Deregulation of Industry, Smartphones}
}

@online{noauthor_official_2010,
	title = {The Official Netflix Blog: Netflix Prize Update},
	url = {https://web.archive.org/web/20100314071658/http://blog.netflix.com/2010/03/this-is-neil-hunt-chief-product-officer.html},
	shorttitle = {The Official Netflix Blog},
	urldate = {2020-02-02},
	date = {2010-03-14},
	file = {Snapshot:/home/carlazz/Zotero/storage/GNQYN8BY/this-is-neil-hunt-chief-product-officer.html:text/html}
}

@online{noauthor_pdf_nodate,
	title = {[{PDF}] Robust de-anonymization of large sparse datasets : a decade later {\textbar} Semantic Scholar},
	url = {/paper/Robust-de-anonymization-of-large-sparse-datasets-%3A-Narayanan-Shmatikov/f41ef0fe589fdfbfe22c1ac5629638773f8d9fe9},
	shorttitle = {[{PDF}] Robust de-anonymization of large sparse datasets},
	abstract = {If our paper has stood the test of time, it is because the core technical insight goes back at least 60 years: a small number of data points about an individual, none of which are uniquely identifying, are collectively equivalent to an identifier. Some of the early papers that explored this idea are by Newcombe et al. [20], Fellegi \&amp; Sunter [10], and SchlÃ¶rer [22]. But the focus of this line of research, up to and including Sweeneyâs seminal work [25], had been on demographic attributes, because thatâs what was collected in databases at the time. Perhaps the main lesson of our paper is that data collection has grown so comprehensive that de-anonymization need no longer rely on demographic attributes. Techniques for protecting against de-anonymization such as making a few attributes more coarse-grained break down for datasets of watched movies or browsing histories or visited locations when these datasets contain hundreds or thousands of observations per individual. We and other researchers have since demonstrated robust de-anonymization techniques in many other domains: social networks [18, 16], genetic data [12, 9, 8], location data [11, 27, 5], credit card data [6], browsing histories [23], writing style [15], source code [3], and compiled binaries [2]. This line of research has firmly established that high-dimensional data is inherently vulnerable to deanonymization. This is also supported by theoretical evidence [4]. When we consider the fact that 33 bits of entropy are sufficient to identify an individual uniquely among the worldâs population, these research findings should be no surprise.},
	urldate = {2020-02-02},
	langid = {english},
	file = {Snapshot:/home/carlazz/Zotero/storage/KP4T6496/f41ef0fe589fdfbfe22c1ac5629638773f8d9fe9.html:text/html}
}

@article{tang_privacy_2017,
	title = {Privacy Loss in Apple's Implementation of Differential Privacy on {MacOS} 10.12},
	url = {http://arxiv.org/abs/1709.02753},
	abstract = {In June 2016, Apple announced that it will deploy differential privacy for some user data collection in order to ensure privacy of user data, even from Apple. The details of Apple's approach remained sparse. Although several patents have since appeared hinting at the algorithms that may be used to achieve differential privacy, they did not include a precise explanation of the approach taken to privacy parameter choice. Such choice and the overall approach to privacy budget use and management are key questions for understanding the privacy protections provided by any deployment of differential privacy. In this work, through a combination of experiments, static and dynamic code analysis of {macOS} Sierra (Version 10.12) implementation, we shed light on the choices Apple made for privacy budget management. We discover and describe Apple's set-up for differentially private data processing, including the overall data pipeline, the parameters used for differentially private perturbation of each piece of data, and the frequency with which such data is sent to Apple's servers. We find that although Apple's deployment ensures that the (differential) privacy loss per each datum submitted to its servers is \$1\$ or \$2\$, the overall privacy loss permitted by the system is significantly higher, as high as \$16\$ per day for the four initially announced applications of Emojis, New words, Deeplinks and Lookup Hints. Furthermore, Apple renews the privacy budget available every day, which leads to a possible privacy loss of 16 times the number of days since user opt-in to differentially private data collection for those four applications. We advocate that in order to claim the full benefits of differentially private data collection, Apple must give full transparency of its implementation, enable user choice in areas related to privacy loss, and set meaningful defaults on the privacy loss permitted.},
	journaltitle = {{arXiv}:1709.02753 [cs]},
	author = {Tang, Jun and Korolova, Aleksandra and Bai, Xiaolong and Wang, Xueqiang and Wang, Xiaofeng},
	urldate = {2020-02-02},
	date = {2017-09-11},
	eprinttype = {arxiv},
	eprint = {1709.02753},
	keywords = {Computer Science - Computers and Society, Computer Science - Cryptography and Security, Computer Science - Machine Learning},
	file = {arXiv Fulltext PDF:/home/carlazz/Zotero/storage/PTWDYR92/Tang et al. - 2017 - Privacy Loss in Apple's Implementation of Differen.pdf:application/pdf;arXiv.org Snapshot:/home/carlazz/Zotero/storage/3CJ2EVW4/1709.html:text/html}
}

@inproceedings{dwork_differential_2006,
	title = {Differential Privacy},
	doi = {10.1007/11787006_1},
	abstract = {In 1977 Dalenius articulated a desideratum for statistical databases: nothing about an individual should be learnable from the database that cannot be learned without access to the database. We give a general impossibility result showing that a formalization of Dalenius' goal along the lines of semantic security cannot be achieved. Contrary to intuition, a variant of the result threatens the privacy even of someone not in the database. This state of affairs suggests a new measure, differential privacy, which, intuitively, captures the increased risk to one's privacy incurred by participating in a database. The techniques developed in a sequence of papers [8, 13, 3], culminating in those described in [12], can achieve any desired level of privacy under this measure. In many cases, extremely accurate information about the database can be provided while simultaneously ensuring very high levels of privacy},
	booktitle = {{ICALP}},
	author = {Dwork, Cynthia},
	date = {2006},
	keywords = {Database, Differential privacy, Semantic security}
}

@article{dwork_algorithmic_2014,
	title = {The Algorithmic Foundations of Differential Privacy},
	volume = {9},
	doi = {10.1561/0400000042},
	abstract = {The problem of privacy-preserving data analysis has a long history spanning multiple disciplines. As electronic data about individuals becomes increasingly detailed, and as technology enables ever more powerful collection and curation of these data, the need increases for a robust, meaningful, and mathematically rigorous definition of privacy, together with a computationally rich class of algorithms that satisfy this definition. Differential Privacy is such a definition.After motivating and discussing the meaning of differential privacy, the preponderance of this monograph is devoted to fundamental techniques for achieving differential privacy, and application of these techniques in creative combinations, using the query-release problem as an ongoing example. A key point is that, by rethinking the computational goal, one can often obtain far better results than would be achieved by methodically replacing each step of a non-private computation with a differentially private implementation. Despite some astonishingly powerful computational results, there are still fundamental limitations â not just on what can be achieved with differential privacy but on what can be achieved with any method that protects against a complete breakdown in privacy. Virtually all the algorithms discussed herein maintain differential privacy against adversaries of arbitrary computational power. Certain algorithms are computationally intensive, others are efficient. Computational complexity for the adversary and the algorithm are both discussed.We then turn from fundamentals to applications other than queryrelease, discussing differentially private methods for mechanism design and machine learning. The vast majority of the literature on differentially private algorithms considers a single, static, database that is subject to many analyses. Differential privacy in other models, including distributed databases and computations on data streams is discussed.Finally, we note that this work is meant as a thorough introduction to the problems and techniques of differential privacy, but is not intended to be an exhaustive survey â there is by now a vast amount of work in differential privacy, and we can cover only a small portion of it.},
	pages = {211--407},
	journaltitle = {Foundations and Trends in Theoretical Computer Science},
	author = {Dwork, Cynthia and Roth, Aaron},
	date = {2014},
	keywords = {Differential privacy, Adversary (cryptography), Algorithm, Classification Tree Method, Computation, Digital curation, Distributed database, File spanning, Machine learning}
}

@inproceedings{wu_data_2017,
	title = {Data Privacy Beyond Differential Privacy},
	abstract = {Computing technologies today have made it much easier to gather personal data, ranging from {GPS} locations to medical records, from online behavior to social exchanges. As algorithms are constantly analyzing such detailed personal information for a wide range of computations, data privacy emerges as a paramount concern. As a strong, meaningful and rigorous notion of privacy, Differential Privacy has provided a powerful framework for designing data analysis algorithms with provable privacy guarantees. Over the past decade, there has been tremendous progress in the theory and algorithms for differential privacy, most of which consider the setting of centralized computation where a single, static database is subject to many data analyses. However, this standard framework does not capture many complex issues in modern computation. For example, the data might be distributed across self-interested agents, who may have incentive to misreport their data; and different individuals in the computation may have different expectations to privacy. The goal of this dissertation is to bring the rich theory of differential privacy to several computational problems in practice. We start by studying the problem of private counting query release for high-dimensional data, for which there are well-known computational hardness results. Despite the worst-case intractability barrier, we provide a solution with practical empirical performances by leveraging powerful optimization heuristics. Then we tackle problems within different social and economic settings, where the standard notion of differential privacy is not applicable. To that end, we use the perspective of differential privacy to design algorithms with meaningful privacy guarantees. (1) We provide privacy-preserving algorithms for solving a family of economic optimization problems under a strong relaxation of the standard definition of differential privacy---joint differential privacy. (2) We also show that (joint) differential privacy can serve as a novel tool for mechanism design when solving these optimization problems: Under our private mechanisms, the agents are incentivized to behave truthfully. (3) Finally, we consider the problem of using social network metadata to guide a search for some class of targeted individuals (for whom we cannot provide any meaningful privacy guarantees). We give a new variant of differential privacy---protected differential privacy---that guarantees differential privacy only for a subgroup of protected individuals. Under this privacy notion, we provide a family of algorithms for searching targeted individuals in the network while ensuring the privacy for the protected (un-targeted) ones. Degree Type Dissertation Degree Name Doctor of Philosophy ({PhD}) Graduate Group Computer and Information Science This dissertation is available at {ScholarlyCommons}: https://repository.upenn.edu/edissertations/2645 First Advisor Michael Kearns Second Advisor Aaron Roth Subject Categories Computer Sciences This dissertation is available at {ScholarlyCommons}: https://repository.upenn.edu/edissertations/2645 {DATA} {PRIVACY} {BEYOND} {DIFFERENTIAL} {PRIVACY} Zhiwei Steven Wu A {DISSERTATION} in Computer and Information Science Presented to the Faculties of the University of Pennsylvania in Partial Fulfillment of the Requirements for the Degree of Doctor of Philosophy 2017 Co-Supervisor of Dissertation Michael Kearns, Professor and National Center Chair, University of Pennsylvania Co-Supervisor of Dissertation Aaron Roth, Associate Professor, University of Pennsylvania Graduate Group Chairperson Lyle Ungar, Professor, University of Pennsylvania Dissertation Committee Sampath Kannan, Henry Salvatori Professor, University of Pennsylvania Alexander Rakhlin, Associate Professor, University of Pennsylvania Tim Roughgarden, Professor, Stanford University Rakesh Vohra, George A. Weiss and Lydia Bravo Weiss University Professor, University of Pennsylvania {DATA} {PRIVACY} {BEYOND} {DIFFERENTIAL} {PRIVACY}},
	author = {Wu, Zhiwei Steven},
	date = {2017},
	keywords = {Differential privacy, Best, worst and average case, Centralized computing, Computational problem, {DBL}-Browser, Experiment, Exponential mechanism (differential privacy), Graph traversal, Information and Computer Science, Information privacy, Information science, Internet Movie Database ({IMDb}), Mathematical optimization, Node - plant part, Performance, Personally identifiable information, Population, Random number generation, Random seed, Realms of the Haunting, Search algorithm, Search problem, Social network, Standard-definition television, Subnetwork}
}

@inproceedings{dwork_differential_2008-1,
	title = {Differential privacy: A survey of results},
	shorttitle = {Differential privacy},
	pages = {1--19},
	booktitle = {International conference on theory and applications of models of computation},
	publisher = {Springer},
	author = {Dwork, Cynthia},
	date = {2008},
	file = {Full Text:/home/carlazz/Zotero/storage/WWDGEMPD/Dwork - 2008 - Differential privacy A survey of results.pdf:application/pdf;Snapshot:/home/carlazz/Zotero/storage/YLR5ANFH/978-3-540-79228-4_1.html:text/html}
}

@inproceedings{narayanan_-anonymizing_2009,
	title = {De-anonymizing Social Networks},
	doi = {10.1109/SP.2009.22},
	abstract = {Operators of online social networks are increasingly sharing potentially sensitive information about users and their relationships with advertisers, application developers, and data-mining researchers. Privacy is typically protected by anonymization, i.e., removing names, addresses, etc.We present a framework for analyzing privacy and anonymity in social networks and develop a new re-identification algorithm targeting anonymized social-network graphs. To demonstrate its effectiveness on real-world networks, we show that a third of the users who can be verified to have accounts on both Twitter, a popular microblogging service, and Flickr, an online photo-sharing site, can be re-identified in the anonymous Twitter graph with only a 12\% error rate.Our de-anonymization algorithm is based purely on the network topology, does not require creation of a large number of dummy "sybil" nodes, is robust to noise and all existing defenses, and works even when the overlap between the target network and the adversary's auxiliary information is small.},
	eventtitle = {2009 30th {IEEE} Symposium on Security and Privacy},
	pages = {173--187},
	booktitle = {2009 30th {IEEE} Symposium on Security and Privacy},
	author = {Narayanan, Arvind and Shmatikov, Vitaly},
	date = {2009-05},
	note = {{ISSN}: 2375-1207},
	keywords = {privacy, data privacy, Privacy, anonymity, anonymized social network graphs, application developers, Companies, data mining, data mining researchers, Data privacy, de-anonymizing social networks, Facebook, graph theory, network topology, Peer to peer computing, re-identification algorithm, social networking (online), social networks},
	file = {IEEE Xplore Abstract Record:/home/carlazz/Zotero/storage/NMQNN3D3/5207644.html:text/html;IEEE Xplore Full Text PDF:/home/carlazz/Zotero/storage/ZMLLN7FB/Narayanan and Shmatikov - 2009 - De-anonymizing Social Networks.pdf:application/pdf}
}

@inproceedings{chang_towards_2010,
	title = {Towards publishing recommendation data with predictive anonymization},
	doi = {10.1145/1755688.1755693},
	abstract = {Recommender systems are used to predict user preferences for products or services. In order to seek better prediction techniques, data owners of recommender systems such as Netflix sometimes make their customers' reviews available to the public, which raises serious privacy concerns. With only a small amount of knowledge about individuals and their ratings to some items in a recommender system, an adversary may easily identify the users and breach their privacy. Unfortunately, most of the existing privacy models (e.g., k-anonymity) cannot be directly applied to recommender systems.
 In this paper, we study the problem of privacy-preserving publishing of recommendation datasets. We represent recommendation data as a bipartite graph, and identify several attacks that can re-identify users and determine their item ratings. To deal with these attacks, we first give formal privacy definitions for recommendation data, and then develop a robust and efficient anonymization algorithm, Predictive Anonymization, to achieve our privacy goals. Our experimental results show that Predictive Anonymization can prevent the attacks with very little impact to prediction accuracy.},
	booktitle = {{ASIACCS} '10},
	author = {Chang, Chih-Cheng and Thompson, Brian and Wang, Wendy Hui and Yao, Danfeng},
	date = {2010},
	keywords = {Privacy, Adversary (cryptography), Algorithm, Data anonymization, Predictive modelling, Recommender system, User (computing)},
	file = {Full Text:/home/carlazz/Zotero/storage/6VY4Y3XS/Chang et al. - 2010 - Towards publishing recommendation data with predic.pdf:application/pdf}
}

@article{luo_distributed_2013,
	title = {A distributed anonymization scheme for privacy-preserving recommendation systems},
	doi = {10.1145/1755688.1755693},
	abstract = {Recommender systems are used to predict user preferences for products or services. In order to seek better prediction techniques, data owners of recommender systems such as Netflix sometimes make their customers' reviews available to the public, which raises serious privacy concerns. With only a small amount of knowledge about individuals and their ratings to some items in a recommender system, an adversary may easily identify the users and breach their privacy. Unfortunately, most of the existing privacy models (e.g., k-anonymity) cannot be directly applied to recommender systems.
 In this paper, we study the problem of privacy-preserving publishing of recommendation datasets. We represent recommendation data as a bipartite graph, and identify several attacks that can re-identify users and determine their item ratings. To deal with these attacks, we first give formal privacy definitions for recommendation data, and then develop a robust and efficient anonymization algorithm, Predictive Anonymization, to achieve our privacy goals. Our experimental results show that Predictive Anonymization can prevent the attacks with very little impact to prediction accuracy.},
	pages = {491--494},
	journaltitle = {2013 {IEEE} 4th International Conference on Software Engineering and Service Science},
	author = {Luo, Zhifeng and Chen, Shuhong and Li, Yutian},
	date = {2013},
	keywords = {Privacy, Adversary (cryptography), Algorithm, Data anonymization, Predictive modelling, Recommender system, User (computing)},
	file = {Full Text:/home/carlazz/Zotero/storage/C54A4UJJ/Luo et al. - 2013 - A distributed anonymization scheme for privacy-pre.pdf:application/pdf}
}

@software{noauthor_googledifferential-privacy_2020,
	title = {google/differential-privacy},
	rights = {Apache-2.0},
	url = {https://github.com/google/differential-privacy},
	abstract = {Google's C++ differential privacy library. Contribute to google/differential-privacy development by creating an account on {GitHub}.},
	publisher = {Google},
	urldate = {2020-02-03},
	date = {2020-01-29},
	note = {original-date: 2019-09-04T13:04:15Z}
}

@inproceedings{erlingsson_rappor_2014,
	title = {Rappor: Randomized aggregatable privacy-preserving ordinal response},
	shorttitle = {Rappor},
	pages = {1054--1067},
	booktitle = {Proceedings of the 2014 {ACM} {SIGSAC} conference on computer and communications security},
	author = {Erlingsson, Ãlfar and Pihur, Vasyl and Korolova, Aleksandra},
	date = {2014},
	file = {Snapshot:/home/carlazz/Zotero/storage/XV3QNAZC/2660267.html:text/html}
}

@online{noauthor_security_nodate,
	title = {Security Engineering - A Guide to Building Dependable Distributed Systems},
	url = {https://www.cl.cam.ac.uk/~rja14/book.html},
	urldate = {2020-02-03},
	file = {Security Engineering - A Guide to Building Dependable Distributed Systems:/home/carlazz/Zotero/storage/BFKLTTY5/book.html:text/html}
}

@online{noauthor_state_nodate,
	title = {The State of Open Source Vulnerability Management},
	url = {https://resources.whitesourcesoftware.com/white-papers/2018-the-state-of-open-source-vulnerability-management},
	urldate = {2020-02-09},
	file = {Snapshot:/home/carlazz/Zotero/storage/T3NP3JGV/2018-the-state-of-open-source-vulnerability-management.html:text/html}
}

@book{mckusick_design_2014,
	location = {Upper Saddle River, {NJ}},
	edition = {2 edition},
	title = {The Design and Implementation of the {FreeBSD} Operating System},
	isbn = {978-0-321-96897-5},
	abstract = {The most complete, authoritative technical guide to the {FreeBSD} kernelâs internal structure has now been extensively updated to cover all major improvements between Versions 5 and 11. Approximately one-third of this editionâs content is completely new, and another one-third has been extensively rewritten. Â  Three long-time {FreeBSD} project leaders begin with a concise overview of the {FreeBSD} kernelâs current design and implementation. Next, they cover the {FreeBSD} kernel from the system-call level downâfrom the interface to the kernel to the hardware. Explaining key design decisions, they detail the concepts, data structures, and algorithms used in implementing each significant system facility, including process management, security, virtual memory, the I/O system, filesystems, socket {IPC}, and networking. Â  This Second Edition Â  â¢ Explains highly scalable and lightweight virtualization using {FreeBSD} jails, and virtual-machine acceleration with Xen and Virtio device paravirtualization Â  â¢ Describes new security features such as Capsicum sandboxing and {GELI} cryptographic disk protection Â  â¢ Fully covers {NFSv}4 and Open Solaris {ZFS} support Â  â¢ Introduces {FreeBSD}âs enhanced volume management and new journaled soft updates Â  â¢ Explains {DTrace}âs fine-grained process debugging/profiling Â  â¢ Reflects major improvements to networking, wireless, and {USB} support Â  Readers can use this guide as both a working reference and an in-depth study of a leading contemporary, portable, open source operating system. Technical and sales support professionals will discover both {FreeBSD}âs capabilities and its limitations. Applications developers will learn how to effectively and efficiently interface with it; system administrators will learn how to maintain, tune, and configure it; and systems programmers will learn how to extend, enhance, and interface with it. Â  Marshall Kirk {McKusick} writes, consults, and teaches classes on {UNIX}- and {BSD}-related subjects. While at the University of California, Berkeley, he implemented the 4.2BSD fast filesystem. He was research computer scientist at the Berkeley Computer Systems Research Group ({CSRG}), overseeing development and release of 4.3BSD and 4.4BSD. He is a {FreeBSD} Foundation board member and a long-time {FreeBSD} committer. Twice president of the Usenix Association, he is also a member of {ACM}, {IEEE}, and {AAAS}. Â  George V. Neville-Neil hacks, writes, teaches, and consults on security, networking, and operating systems. A {FreeBSD} Foundation board member, he served on the {FreeBSD} Core Team for four years. Since 2004, he has written the âKode Viciousâ column for Queue and Communications of the {ACM}. He is vice chair of {ACM}âs Practitioner Board and a member of Usenix Association, {ACM}, {IEEE}, and {AAAS}. Â  Robert N.M. Watson is a University Lecturer in systems, security, and architecture in the Security Research Group at the University of Cambridge Computer Laboratory. He supervises advanced research in computer architecture, compilers, program analysis, operating systems, networking, and security. A {FreeBSD} Foundation board member, he served on the Core Team for ten years and has been a committer for fifteen years. He is a member of Usenix Association and {ACM}.},
	pagetotal = {928},
	publisher = {Addison Wesley},
	author = {{McKusick}, Marshall Kirk and Neville-Neil, George V. and Watson, Robert N. M.},
	date = {2014-09-05}
}

@inproceedings{szekeres_sok_2013,
	title = {Sok: Eternal war in memory},
	shorttitle = {Sok},
	pages = {48--62},
	booktitle = {2013 {IEEE} Symposium on Security and Privacy},
	publisher = {{IEEE}},
	author = {Szekeres, Laszlo and Payer, Mathias and Wei, Tao and Song, Dawn},
	date = {2013},
	file = {Snapshot:/home/carlazz/Zotero/storage/36G4EJE7/6547101.html:text/html}
}

@article{bessey_few_2010,
	title = {A few billion lines of code later: using static analysis to find bugs in the real world},
	volume = {53},
	issn = {0001-0782},
	url = {https://doi.org/10.1145/1646353.1646374},
	doi = {10.1145/1646353.1646374},
	shorttitle = {A few billion lines of code later},
	abstract = {How Coverity built a bug-finding tool, and a business, around the unlimited supply of bugs in software systems.},
	pages = {66--75},
	number = {2},
	journaltitle = {Communications of the {ACM}},
	shortjournal = {Commun. {ACM}},
	author = {Bessey, Al and Block, Ken and Chelf, Ben and Chou, Andy and Fulton, Bryan and Hallem, Seth and Henri-Gros, Charles and Kamsky, Asya and {McPeak}, Scott and Engler, Dawson},
	urldate = {2020-02-08},
	date = {2010-02-01},
	file = {Full Text PDF:/home/carlazz/Zotero/storage/KCKK2GBQ/Bessey et al. - 2010 - A few billion lines of code later using static an.pdf:application/pdf}
}

@inproceedings{xia_cherivoke_2019,
	title = {{CHERIvoke}: Characterising Pointer Revocation using {CHERI} Capabilities for Temporal Memory Safety},
	shorttitle = {{CHERIvoke}},
	pages = {545--557},
	booktitle = {Proceedings of the 52nd Annual {IEEE}/{ACM} International Symposium on Microarchitecture},
	author = {Xia, Hongyan and Woodruff, Jonathan and Ainsworth, Sam and Filardo, Nathaniel W. and Roe, Michael and Richardson, Alexander and Rugg, Peter and Neumann, Peter G. and Moore, Simon W. and Watson, Robert {NM}},
	date = {2019},
	file = {Snapshot:/home/carlazz/Zotero/storage/EJ3AXXSU/3352460.html:text/html}
}

@inproceedings{davis_cheriabi_2019,
	title = {{CheriABI}: Enforcing valid pointer provenance and minimizing pointer privilege in the {POSIX} C run-time environment},
	shorttitle = {{CheriABI}},
	pages = {379--393},
	booktitle = {Proceedings of the Twenty-Fourth International Conference on Architectural Support for Programming Languages and Operating Systems},
	author = {Davis, Brooks and Watson, Robert {NM} and Richardson, Alexander and Neumann, Peter G. and Moore, Simon W. and Baldwin, John and Chisnall, David and Clarke, James and Filardo, Nathaniel Wesley and Gudka, Khilan},
	date = {2019},
	file = {Snapshot:/home/carlazz/Zotero/storage/5GLZ8IW7/3297858.html:text/html}
}

@article{serebryany_memory_2018,
	title = {Memory Tagging and how it improves C/C++ memory safety},
	journaltitle = {{arXiv} preprint {arXiv}:1802.09517},
	author = {Serebryany, Kostya and Stepanov, Evgenii and Shlyapnikov, Aleksey and Tsyrklevich, Vlad and Vyukov, Dmitry},
	date = {2018},
	file = {Full Text:/home/carlazz/Zotero/storage/HH43BX4I/Serebryany et al. - 2018 - Memory Tagging and how it improves CC++ memory sa.pdf:application/pdf;Snapshot:/home/carlazz/Zotero/storage/BHIQUDTZ/1802.html:text/html}
}

@inproceedings{serebryany_addresssanitizer_2012,
	title = {{AddressSanitizer}: A Fast Address Sanity Checker},
	url = {https://www.usenix.org/conference/usenixfederatedconferencesweek/addresssanitizer-fast-address-sanity-checker},
	shorttitle = {{AddressSanitizer}},
	booktitle = {{USENIX} {ATC} 2012},
	author = {Serebryany, Konstantin and Bruening, Derek and Potapenko, Alexander and Vyukov, Dmitry},
	urldate = {2020-02-09},
	date = {2012},
	file = {Full Text PDF:/home/carlazz/Zotero/storage/I4QJVW3K/Serebryany et al. - 2012 - AddressSanitizer A Fast Address Sanity Checker.pdf:application/pdf}
}

@online{noauthor_am3358_nodate,
	title = {{AM}3358 Sitara processor: Arm Cortex-A8, 3D graphics, {PRU}-{ICSS}, {CAN} {\textbar} {TI}.com},
	url = {https://www.ti.com/product/AM3358},
	urldate = {2020-02-10}
}

@inproceedings{joannou_efficient_2017,
	title = {Efficient Tagged Memory},
	doi = {10.1109/ICCD.2017.112},
	abstract = {We characterize the cache behavior of an in-memory tag table and demonstrate that an optimized implementation can typically achieve a near-zero memory traffic overhead. Both industry and academia have repeatedly demonstrated tagged memory as a key mechanism to enable enforcement of powerful security invariants, including capabilities, pointer integrity, watchpoints, and information-flow tracking. A single-bit tag shadowspace is the most commonly proposed requirement, as one bit is the minimum metadata needed to distinguish between an untyped data word and any number of new hardware-enforced types. We survey various tag shadowspace approaches and identify their common requirements and positive features of their implementations. To avoid non-standard memory widths, we identify the most practical implementation for tag storage to be an in-memory table managed next to the {DRAM} controller. We characterize the caching performance of such a tag table and demonstrate a {DRAM} traffic overhead below 5\% for the vast majority of applications. We identify spatial locality on a page scale as the primary factor that enables surprisingly high table cache-ability. We then demonstrate tag-table compression for a set of common applications. A hierarchical structure with elegantly simple optimizations reduces {DRAM} traffic overhead to below 1\% for most applications. These insights and optimizations pave the way for commercial applications making use of single-bit tags stored in commodity memory.},
	eventtitle = {2017 {IEEE} International Conference on Computer Design ({ICCD})},
	pages = {641--648},
	booktitle = {2017 {IEEE} International Conference on Computer Design ({ICCD})},
	author = {Joannou, Alexandre and Woodruff, Jonathan and Kovacsics, Robert and Moore, Simon W. and Bradbury, Alex and Xia, Hongyan and Watson, Robert N.M. and Chisnall, David and Roe, Michael and Davis, Brooks and Napierala, Edward and Baldwin, John and Gudka, Khilan and Neumann, Peter G. and Mazzinghi, Alfredo and Richardson, Alex and Son, Stacey and Markettos, A. Theodore},
	date = {2017-11},
	note = {{ISSN}: 1063-6404},
	keywords = {Pipelines, Random access memory, Hardware, Computer architecture, Security, academia, cache behavior, cache storage, Caches, caching performance, commodity memory, common applications, common requirements, commonly proposed requirement, {DRAM} chips, {DRAM} controller, {DRAM} traffic overhead, efficient tagged memory, elegantly simple optimizations, enforcement, Error correction codes, hardware-enforced types, high table cache-ability, in-memory table, in-memory tag table, industry, information-flow tracking, key mechanism, Memory, meta data, Metadata, minimum metadata, near-zero memory traffic overhead, nonstandard memory widths, optimized implementation, pointer integrity, powerful security invariants, practical implementation, Processor, Safety, single-bit tag shadowspace, single-bit tags, tag shadowspace approaches, tag storage, tag-table compression, untyped data word, word length 1.0 bit},
	file = {IEEE Xplore Abstract Record:/home/carlazz/Zotero/storage/5QEXZAXM/8119285.html:text/html;IEEE Xplore Full Text PDF:/home/carlazz/Zotero/storage/RF487GH7/Joannou et al. - 2017 - Efficient Tagged Memory.pdf:application/pdf}
}

@article{saltzer_protection_1975,
	title = {The protection of information in computer systems},
	volume = {63},
	pages = {1278--1308},
	number = {9},
	journaltitle = {Proceedings of the {IEEE}},
	author = {Saltzer, Jerome H. and Schroeder, Michael D.},
	date = {1975},
	file = {Snapshot:/home/carlazz/Zotero/storage/KE2Z7U4W/1451869.html:text/html}
}

@online{noauthor_department_nodate,
	title = {Department of Computer Science and Technology â {CHERI}: The Arm Morello Board},
	url = {https://www.cl.cam.ac.uk/research/security/ctsrd/cheri/cheri-morello.html},
	urldate = {2020-02-11},
	file = {Department of Computer Science and Technology â CHERI\: The Arm Morello Board:/home/carlazz/Zotero/storage/SMG98NHZ/cheri-morello.html:text/html}
}

@article{seltzer_nfs_2003,
	title = {{NFS} Tricks and Benchmarking Traps},
	author = {Seltzer, Margo and Ellard, Daniel},
	date = {2003},
	file = {Snapshot:/home/carlazz/Zotero/storage/6R5BXUP6/34190.html:text/html}
}

@inproceedings{razavi_flip_2016,
	title = {Flip feng shui: Hammering a needle in the software stack},
	shorttitle = {Flip feng shui},
	pages = {1--18},
	booktitle = {25th \$\{\${USENIX}\$\}\$ Security Symposium (\$\{\${USENIX}\$\}\$ Security 16)},
	author = {Razavi, Kaveh and Gras, Ben and Bosman, Erik and Preneel, Bart and Giuffrida, Cristiano and Bos, Herbert},
	date = {2016},
	file = {Full Text:/home/carlazz/Zotero/storage/PPYXDH44/Razavi et al. - 2016 - Flip feng shui Hammering a needle in the software.pdf:application/pdf;Snapshot:/home/carlazz/Zotero/storage/LJXI7J9H/razavi.html:text/html}
}

@inproceedings{gruss_rowhammer_2016,
	title = {Rowhammer. js: A remote software-induced fault attack in javascript},
	shorttitle = {Rowhammer. js},
	pages = {300--321},
	booktitle = {International conference on detection of intrusions and malware, and vulnerability assessment},
	publisher = {Springer},
	author = {Gruss, Daniel and Maurice, ClÃ©mentine and Mangard, Stefan},
	date = {2016},
	file = {Full Text:/home/carlazz/Zotero/storage/H466K9HL/Gruss et al. - 2016 - Rowhammer. js A remote software-induced fault att.pdf:application/pdf;Snapshot:/home/carlazz/Zotero/storage/QCAMBCNU/978-3-319-40667-1_15.html:text/html}
}

@article{kim_flipping_2014,
	title = {Flipping bits in memory without accessing them: An experimental study of {DRAM} disturbance errors},
	volume = {42},
	shorttitle = {Flipping bits in memory without accessing them},
	pages = {361--372},
	number = {3},
	journaltitle = {{ACM} {SIGARCH} Computer Architecture News},
	author = {Kim, Yoongu and Daly, Ross and Kim, Jeremie and Fallin, Chris and Lee, Ji Hye and Lee, Donghyuk and Wilkerson, Chris and Lai, Konrad and Mutlu, Onur},
	date = {2014},
	file = {Snapshot:/home/carlazz/Zotero/storage/PNRDS363/2678373.html:text/html}
}

@inproceedings{govindavajhala_using_2003,
	title = {Using memory errors to attack a virtual machine},
	doi = {10.1109/SECPRI.2003.1199334},
	abstract = {We present an experimental study showing that soft memory errors can lead to serious security vulnerabilities in Java and .{NET} virtual machines, or in any system that relies on type-checking of untrusted programs as a protection mechanism. Our attack works by sending to the {JVM} a Java program that is designed so that almost any memory error in its address space will allow it to take control of the {JVM}. All conventional Java and .{NET} virtual machines are vulnerable to this attack. The technique of the attack is broadly applicable against other language-based security schemes such as proof-carrying code. We measured the attack on two commercial Java virtual machines: Sun's and {IBM}'s. We show that a single-bit error in the Java program's data space can be exploited to execute arbitrary code with a probability of about 70\%, and multiple-bit errors with a lower probability. Our attack is particularly relevant against smart cards or tamper-resistant computers, where the user has physical access (to the outside of the computer) and can use various means to induce faults; we have successfully used heat. Fortunately, there are some straightforward defenses against this attack.},
	eventtitle = {2003 Symposium on Security and Privacy, 2003.},
	pages = {154--165},
	booktitle = {2003 Symposium on Security and Privacy, 2003.},
	author = {Govindavajhala, S. and Appel, A.W.},
	date = {2003-05},
	note = {{ISSN}: 1081-6011},
	keywords = {Hardware, security of data, Program processors, Internet, Security, .{NET} virtual machines, arbitrary code execution, Computer errors, Error correction, {IBM} Java virtual machines, Java, {JVM}, language-based security schemes, Memory management, multiple-bit errors, physical access, Physics computing, program data space, proof-carrying code, Protection, security vulnerabilities, single-bit error, smart cards, soft memory errors, Sun Java virtual machines, tamper-resistant computers, type-checking, untrusted programs, virtual machine attack, Virtual machining},
	file = {IEEE Xplore Abstract Record:/home/carlazz/Zotero/storage/IP66BYZS/1199334.html:text/html;IEEE Xplore Full Text PDF:/home/carlazz/Zotero/storage/TIHX6DCT/Govindavajhala and Appel - 2003 - Using memory errors to attack a virtual machine.pdf:application/pdf}
}

@inproceedings{murdoch_chip_2010,
	title = {Chip and {PIN} is Broken},
	pages = {433--446},
	booktitle = {2010 {IEEE} Symposium on Security and Privacy},
	publisher = {{IEEE}},
	author = {Murdoch, Steven J. and Drimer, Saar and Anderson, Ross and Bond, Mike},
	date = {2010},
	file = {Snapshot:/home/carlazz/Zotero/storage/KYJA6EY9/5504801.html:text/html}
}

@inproceedings{de_ruiter_formal_2011,
	title = {Formal analysis of the {EMV} protocol suite},
	pages = {113--129},
	booktitle = {Joint Workshop on Theory of Security and Applications},
	publisher = {Springer},
	author = {De Ruiter, Joeri and Poll, Erik},
	date = {2011},
	file = {Full Text:/home/carlazz/Zotero/storage/V78NEYMS/De Ruiter and Poll - 2011 - Formal analysis of the EMV protocol suite.pdf:application/pdf;Snapshot:/home/carlazz/Zotero/storage/GCJ4PQUQ/978-3-642-27375-9_7.html:text/html}
}

@inproceedings{bond_chip_2014,
	title = {Chip and Skim: cloning {EMV} cards with the pre-play attack},
	shorttitle = {Chip and Skim},
	pages = {49--64},
	booktitle = {2014 {IEEE} Symposium on Security and Privacy},
	publisher = {{IEEE}},
	author = {Bond, Mike and Choudary, Omar and Murdoch, Steven J. and Skorobogatov, Sergei and Anderson, Ross},
	date = {2014},
	file = {Snapshot:/home/carlazz/Zotero/storage/L8GDJ8SH/6956556.html:text/html}
}

@article{bond_be_2015,
	title = {Be prepared: the {EMV} preplay attack},
	volume = {13},
	shorttitle = {Be prepared},
	pages = {56--64},
	number = {2},
	journaltitle = {{IEEE} Security \& Privacy},
	author = {Bond, Mike and Choudary, Marios O. and Murdoch, Steven J. and Skorobogatov, Sergei and Anderson, Ross},
	date = {2015},
	file = {Snapshot:/home/carlazz/Zotero/storage/PPSPHACH/7085649.html:text/html}
}

@article{anderson_emv_2014,
	title = {{EMV}: Why payment systems fail},
	volume = {57},
	shorttitle = {{EMV}},
	pages = {24--28},
	number = {6},
	journaltitle = {Communications of the {ACM}},
	author = {Anderson, Ross and Murdoch, Steven J.},
	date = {2014},
	file = {Snapshot:/home/carlazz/Zotero/storage/7RY9CFQY/2602321.html:text/html}
}

@inproceedings{yarom_flush_2014,
	title = {{FLUSH}+ {RELOAD}: a high resolution, low noise, L3 cache side-channel attack},
	shorttitle = {{FLUSH}+ {RELOAD}},
	pages = {719--732},
	booktitle = {23rd \$\{\${USENIX}\$\}\$ Security Symposium (\$\{\${USENIX}\$\}\$ Security 14)},
	author = {Yarom, Yuval and Falkner, Katrina},
	date = {2014},
	file = {Full Text:/home/carlazz/Zotero/storage/2AZUP32R/Yarom and Falkner - 2014 - FLUSH+ RELOAD a high resolution, low noise, L3 ca.pdf:application/pdf}
}

@article{chen_sgxpectre_2018,
	title = {Sgxpectre attacks: Leaking enclave secrets via speculative execution},
	shorttitle = {Sgxpectre attacks},
	journaltitle = {{arXiv} preprint {arXiv}:1802.09085},
	author = {Chen, Guoxing and Chen, Sanchuan and Xiao, Yuan and Zhang, Yinqian and Lin, Zhiqiang and Lai, Ten H.},
	date = {2018},
	file = {Full Text:/home/carlazz/Zotero/storage/9YZ74RGW/Chen et al. - 2018 - Sgxpectre attacks Leaking enclave secrets via spe.pdf:application/pdf}
}

@article{evtyushkin_branchscope_2018,
	title = {Branchscope: A new side-channel attack on directional branch predictor},
	volume = {53},
	shorttitle = {Branchscope},
	pages = {693--707},
	number = {2},
	journaltitle = {{ACM} {SIGPLAN} Notices},
	author = {Evtyushkin, Dmitry and Riley, Ryan and Abu-Ghazaleh, Nael CSE and {ECE} and Ponomarev, Dmitry},
	date = {2018},
	file = {Snapshot:/home/carlazz/Zotero/storage/IZVRNFLF/3296957.html:text/html}
}

@online{noauthor_pdf_nodate-1,
	title = {[{PDF}] Replicating and Mitigating Spectre Attacks on a Open Source {RISC}-V Microarchitecture {\textbar} Semantic Scholar},
	url = {/paper/Replicating-and-Mitigating-Spectre-Attacks-on-a-Gonz%C3%A1lez/598e37963d76cd9cae651ecf4a62f0833a7e82ed},
	abstract = {Recent revelations of new side-channel vulnerabilities in modern processors has made hardware security a first-order concern in processor design. We demonstrate how the Berkeley Out-of-Order Machine ({BOOM}), a generic open-source out-of-order {RISC}-V processor, is useful for studying the performance and security implications of microarchitectural mitigations for side-channel attacks. Two results are presented. First we replicate several basic variants of Spectre attacks which exploit the effects of speculative execution in the L1 data cache. We then implement a preliminary hardware mitigation for such attacks, demonstrate its effectiveness, and measure its impact on performance, and area. Compared to the baseline processor, our mitigation displays a 2\% {IPC} improvement, a 2.5\% area increase, and a 0.36\% clock reduction in a 45nm process. To our knowledge, our work is the first available demonstration on an open-source {RISC}-V processor of speculative side-channel attacks and a potential hardware mitigation. Our methodology demonstrates the value of the open-source {RISC}-V hardware ecosystem for secure hardware research.},
	urldate = {2020-02-17},
	langid = {english},
	file = {Snapshot:/home/carlazz/Zotero/storage/BPL8GI2Z/598e37963d76cd9cae651ecf4a62f0833a7e82ed.html:text/html}
}

@inproceedings{palit_mitigating_2019,
	location = {San Juan, Puerto Rico},
	title = {Mitigating data leakage by protecting memory-resident sensitive data},
	isbn = {978-1-4503-7628-0},
	url = {https://doi.org/10.1145/3359789.3359815},
	doi = {10.1145/3359789.3359815},
	series = {{ACSAC} '19},
	abstract = {Gaining reliable arbitrary code execution through the exploitation of memory corruption vulnerabilities is becoming increasingly more difficult in the face of modern exploit mitigations. Facing this challenge, adversaries have started shifting their attention to data leakage attacks, which can lead to equally damaging outcomes, such as the disclosure of private keys or other sensitive data. In this work, we present a compiler-level defense against data leakage attacks for user-space applications. Our approach strikes a balance between the manual effort required to protect sensitive application data, and the performance overhead of achieving strong data confidentiality. To that end, we require developers to simply annotate those variables holding sensitive data, after which our framework automatically transforms only the fraction of the entire program code that is related to sensitive data operations. We implemented this approach by extending the {LLVM} compiler, and used it to protect memory-resident private keys in the {MbedTLS} server, ssh-agent, and a Libsodium-based file signing program, as well as user passwords for Lighttpd and Memcached. Our results demonstrate the feasibility and practicality of our technique: a modest runtime overhead (e.g., 13\% throughput reduction for {MbedTLS}) that is on par with, or better than, existing state-of-the-art memory safety approaches for selective data protection.},
	pages = {598--611},
	booktitle = {Proceedings of the 35th Annual Computer Security Applications Conference},
	publisher = {Association for Computing Machinery},
	author = {Palit, Tapti and Monrose, Fabian and Polychronakis, Michalis},
	urldate = {2020-02-16},
	date = {2019-12-09},
	keywords = {data confidentiality, data leakage attacks, side channel attacks, software security},
	file = {Full Text PDF:/home/carlazz/Zotero/storage/5PVKF9RN/Palit et al. - 2019 - Mitigating data leakage by protecting memory-resid.pdf:application/pdf}
}

@article{seaborn_exploiting_2015,
	title = {Exploiting the {DRAM} rowhammer bug to gain kernel privileges},
	volume = {15},
	pages = {71},
	journaltitle = {Black Hat},
	author = {Seaborn, Mark and Dullien, Thomas},
	date = {2015},
	file = {Full Text:/home/carlazz/Zotero/storage/KRTE3NNH/Seaborn and Dullien - 2015 - Exploiting the DRAM rowhammer bug to gain kernel p.pdf:application/pdf}
}

@inproceedings{van_der_veen_drammer_2016,
	title = {Drammer: Deterministic rowhammer attacks on mobile platforms},
	shorttitle = {Drammer},
	pages = {1675--1689},
	booktitle = {Proceedings of the 2016 {ACM} {SIGSAC} conference on computer and communications security},
	author = {Van Der Veen, Victor and Fratantonio, Yanick and Lindorfer, Martina and Gruss, Daniel and Maurice, ClÃ©mentine and Vigna, Giovanni and Bos, Herbert and Razavi, Kaveh and Giuffrida, Cristiano},
	date = {2016},
	file = {Snapshot:/home/carlazz/Zotero/storage/WFPTM94I/2976749.html:text/html}
}

@online{noauthor_ssh_nodate,
	title = {ssh whoami.filippo.io},
	url = {https://blog.filippo.io/ssh-whoami-filippo-io/},
	urldate = {2020-02-17},
	file = {ssh whoami.filippo.io:/home/carlazz/Zotero/storage/VJNTS86P/ssh-whoami-filippo-io.html:text/html}
}

@inproceedings{kocher_spectre_2019,
	title = {Spectre attacks: Exploiting speculative execution},
	shorttitle = {Spectre attacks},
	pages = {1--19},
	booktitle = {2019 {IEEE} Symposium on Security and Privacy ({SP})},
	publisher = {{IEEE}},
	author = {Kocher, Paul and Horn, Jann and Fogh, Anders and Genkin, Daniel and Gruss, Daniel and Haas, Werner and Hamburg, Mike and Lipp, Moritz and Mangard, Stefan and Prescher, Thomas},
	date = {2019},
	file = {Snapshot:/home/carlazz/Zotero/storage/CM7WDJWP/8835233.html:text/html}
}

@online{noauthor_retpoline_nodate,
	title = {Retpoline: a software construct for preventing branch-target-injection - Google Help},
	url = {https://support.google.com/faqs/answer/7625886},
	urldate = {2020-02-17},
	file = {Retpoline\: a software construct for preventing branch-target-injection - Google Help:/home/carlazz/Zotero/storage/PGJ48U4D/7625886.html:text/html}
}

@article{lipp_meltdown_2018,
	title = {Meltdown},
	journaltitle = {{arXiv} preprint {arXiv}:1801.01207},
	author = {Lipp, Moritz and Schwarz, Michael and Gruss, Daniel and Prescher, Thomas and Haas, Werner and Mangard, Stefan and Kocher, Paul and Genkin, Daniel and Yarom, Yuval and Hamburg, Mike},
	date = {2018},
	file = {Full Text:/home/carlazz/Zotero/storage/QKWS86I8/Lipp et al. - 2018 - Meltdown.pdf:application/pdf;Snapshot:/home/carlazz/Zotero/storage/PJYEFARZ/1801.html:text/html}
}

@report{asanovic_berkeley_2015,
	title = {The berkeley out-of-order machine (boom): An industry-competitive, synthesizable, parameterized risc-v processor},
	shorttitle = {The berkeley out-of-order machine (boom)},
	institution = {University of California at Berkeley Berkeley United States},
	author = {Asanovic, Krste and Patterson, David A. and Celio, Christopher},
	date = {2015},
	file = {Full Text:/home/carlazz/Zotero/storage/GMGPRZWN/Asanovic et al. - 2015 - The berkeley out-of-order machine (boom) An indus.pdf:application/pdf;Snapshot:/home/carlazz/Zotero/storage/PXE2VXXZ/AD1003146.html:text/html}
}

@software{gregg_brendangreggflamegraph_2020,
	title = {brendangregg/{FlameGraph}},
	url = {https://github.com/brendangregg/FlameGraph},
	abstract = {Stack trace visualizer. Contribute to brendangregg/{FlameGraph} development by creating an account on {GitHub}.},
	author = {Gregg, Brendan},
	urldate = {2020-03-04},
	date = {2020-03-04},
	note = {original-date: 2011-12-16T02:20:53Z}
}

@online{noauthor_perfetto_nodate,
	title = {Perfetto {UI} with {DTrace} support},
	url = {https://nicomazz.github.io/perfetto_dtrace/#!/},
	urldate = {2020-03-07},
	file = {Perfetto UI:/home/carlazz/Zotero/storage/9WNEXXGI/perfetto_dtrace.html:text/html}
}

@online{noauthor_perfetto_nodate-1,
	title = {Perfetto - Docs},
	url = {https://www.perfetto.dev/#/},
	urldate = {2020-03-04}
}

@online{noauthor_passwords_2020,
	title = {Passwords in online services},
	url = {https://ico.org.uk/for-organisations/guide-to-data-protection/guide-to-the-general-data-protection-regulation-gdpr/security/passwords-in-online-services/},
	urldate = {2020-03-02},
	date = {2020-02-25},
	langid = {english},
	file = {Snapshot:/home/carlazz/Zotero/storage/NDW9GZYX/passwords-in-online-services.html:text/html}
}

@inproceedings{hitaj_passgan_2019,
	title = {Passgan: A deep learning approach for password guessing},
	shorttitle = {Passgan},
	pages = {217--237},
	booktitle = {International Conference on Applied Cryptography and Network Security},
	publisher = {Springer},
	author = {Hitaj, Briland and Gasti, Paolo and Ateniese, Giuseppe and Perez-Cruz, Fernando},
	date = {2019},
	file = {Full Text:/home/carlazz/Zotero/storage/3J6TN4AM/Hitaj et al. - 2019 - Passgan A deep learning approach for password gue.pdf:application/pdf;Snapshot:/home/carlazz/Zotero/storage/E52J8GPJ/978-3-030-21568-2_11.html:text/html}
}

@article{wiedenbeck_passpoints_2005,
	title = {{PassPoints}: Design and longitudinal evaluation of a graphical password system},
	volume = {63},
	shorttitle = {{PassPoints}},
	pages = {102--127},
	number = {1},
	journaltitle = {International journal of human-computer studies},
	author = {Wiedenbeck, Susan and Waters, Jim and Birget, Jean-Camille and Brodskiy, Alex and Memon, Nasir},
	date = {2005},
	file = {Full Text:/home/carlazz/Zotero/storage/W47XCL4H/S1071581905000625.html:text/html}
}

@incollection{jermyn_design_1999,
	title = {The design and analysis of graphical passwords.},
	publisher = {{USENIX} Association},
	author = {Jermyn, I. H. and Mayer, Alain and Monrose, Fabian and Reiter, Michael K. and Rubin, Aviel D.},
	date = {1999},
	file = {Full Text:/home/carlazz/Zotero/storage/3G6NXLTK/Jermyn et al. - 1999 - The design and analysis of graphical passwords..pdf:application/pdf}
}

@inproceedings{dhamija_deja_2000,
	title = {Deja Vu-A User Study: Using Images for Authentication.},
	volume = {9},
	shorttitle = {Deja Vu-A User Study},
	pages = {4--4},
	booktitle = {{USENIX} Security Symposium},
	author = {Dhamija, Rachna and Perrig, Adrian},
	date = {2000},
	file = {Full Text:/home/carlazz/Zotero/storage/CW43FFRW/Dhamija and Perrig - 2000 - Deja Vu-A User Study Using Images for Authenticat.pdf:application/pdf;Snapshot:/home/carlazz/Zotero/storage/S63BIKAS/dhamija_html.html:text/html}
}

@inproceedings{florencio_large-scale_2007,
	location = {Banff, Alberta, Canada},
	title = {A large-scale study of web password habits},
	isbn = {978-1-59593-654-7},
	url = {https://doi.org/10.1145/1242572.1242661},
	doi = {10.1145/1242572.1242661},
	series = {{WWW} '07},
	abstract = {We report the results of a large scale study of password use andpassword re-use habits. The study involved half a million users over athree month period. A client component on users' machines recorded a variety of password strength, usage and frequency metrics. This allows us to measure or estimate such quantities as the average number of passwords and average number of accounts each user has, how many passwords she types per day, how often passwords are shared among sites, and how often they are forgotten. We get extremely detailed data on password strength, the types and lengths of passwords chosen, and how they vary by site. The data is the first large scale study of its kind, and yields numerous other insights into the role the passwords play in users' online experience.},
	pages = {657--666},
	booktitle = {Proceedings of the 16th international conference on World Wide Web},
	publisher = {Association for Computing Machinery},
	author = {Florencio, Dinei and Herley, Cormac},
	urldate = {2020-03-02},
	date = {2007-05-08},
	keywords = {authentication, measurements, password},
	file = {Full Text PDF:/home/carlazz/Zotero/storage/MXSECHLR/Florencio and Herley - 2007 - A large-scale study of web password habits.pdf:application/pdf}
}

@inproceedings{florencio_large-scale_2007-1,
	title = {A large-scale study of web password habits},
	pages = {657--666},
	booktitle = {Proceedings of the 16th international conference on World Wide Web},
	author = {Florencio, Dinei and Herley, Cormac},
	date = {2007},
	file = {Snapshot:/home/carlazz/Zotero/storage/3IFS4SCT/1242572.html:text/html}
}

@inproceedings{klein_foiling_1990,
	title = {Foiling the cracker: A survey of, and improvements to, password security},
	shorttitle = {Foiling the cracker},
	pages = {5--14},
	booktitle = {Proceedings of the 2nd {USENIX} Security Workshop},
	author = {Klein, Daniel V.},
	date = {1990},
	file = {Full Text:/home/carlazz/Zotero/storage/ZUUZZGUX/Klein - 1990 - Foiling the cracker A survey of, and improvements.pdf:application/pdf}
}

@inproceedings{bonneau_quest_2012,
	title = {The quest to replace passwords: A framework for comparative evaluation of web authentication schemes},
	shorttitle = {The quest to replace passwords},
	pages = {553--567},
	booktitle = {2012 {IEEE} Symposium on Security and Privacy},
	publisher = {{IEEE}},
	author = {Bonneau, Joseph and Herley, Cormac and Van Oorschot, Paul C. and Stajano, Frank},
	date = {2012},
	file = {Snapshot:/home/carlazz/Zotero/storage/A6ERB5PA/6234436.html:text/html}
}

@article{adams_users_1999,
	title = {Users are not the enemy},
	volume = {42},
	pages = {40--46},
	number = {12},
	journaltitle = {Communications of the {ACM}},
	author = {Adams, Anne and Sasse, Martina Angela},
	date = {1999},
	file = {Snapshot:/home/carlazz/Zotero/storage/QD4EHE8J/322796.html:text/html}
}

@article{morris_password_1979,
	title = {Password security: A case history},
	volume = {22},
	shorttitle = {Password security},
	pages = {594--597},
	number = {11},
	journaltitle = {Communications of the {ACM}},
	author = {Morris, Robert and Thompson, Ken},
	date = {1979},
	file = {Snapshot:/home/carlazz/Zotero/storage/5HCJW7DZ/359168.html:text/html}
}

@online{noauthor_freebsdsyskernsys_pipec_nodate,
	title = {freebsd/sys/kern/sys\_pipe.c},
	url = {https://github.com/freebsd/freebsd/blob/master/sys/kern/sys_pipe.c#L24},
	abstract = {{FreeBSD} src tree (read-only mirror). Contribute to freebsd/freebsd development by creating an account on {GitHub}.},
	titleaddon = {{GitHub}},
	urldate = {2020-02-25},
	langid = {english},
	file = {Snapshot:/home/carlazz/Zotero/storage/C78882ZT/sys_pipe.html:text/html}
}

@article{moore_economics_2009,
	title = {The economics of online crime},
	volume = {23},
	pages = {3--20},
	number = {3},
	journaltitle = {Journal of Economic Perspectives},
	author = {Moore, Tyler and Clayton, Richard and Anderson, Ross},
	date = {2009},
	file = {Full Text:/home/carlazz/Zotero/storage/FN7DB2CK/Moore et al. - 2009 - The economics of online crime.pdf:application/pdf;Snapshot:/home/carlazz/Zotero/storage/GKHMQ4CI/articles.html:text/html}
}

@article{moore_economics_2011,
	title = {Economics and Internet Security: A Survey of Recent Analytical, Empirical, and Behavioral Research},
	shorttitle = {Economics and Internet Security},
	author = {Moore, Tyler and Anderson, Ross},
	date = {2011},
	file = {Full Text:/home/carlazz/Zotero/storage/PXH8ZZIJ/Moore and Anderson - 2011 - Economics and Internet Security A Survey of Recen.pdf:application/pdf;Snapshot:/home/carlazz/Zotero/storage/YJKV7N9V/23574266.html:text/html}
}

@inproceedings{anderson_security_2012,
	title = {Security economics: a personal perspective},
	shorttitle = {Security economics},
	pages = {139--144},
	booktitle = {Proceedings of the 28th Annual Computer Security Applications Conference},
	author = {Anderson, Ross},
	date = {2012},
	file = {Snapshot:/home/carlazz/Zotero/storage/TKM6ZJP3/2420950.html:text/html}
}

@inproceedings{ron_how_2014,
	location = {Berlin, Heidelberg},
	title = {How Did Dread Pirate Roberts Acquire and Protect his Bitcoin Wealth?},
	isbn = {978-3-662-44774-1},
	doi = {10.1007/978-3-662-44774-1_1},
	series = {Lecture Notes in Computer Science},
	abstract = {The Bitcoin scheme is the most popular and talked about alternative payment scheme. One of the most active parts of the Bitcoin ecosystem was the Silk Road marketplace, in which highly illegal substances and services were traded. It was run by a person who called himself Dread Pirate Roberts ({DPR}), whose bitcoin holdings are estimated to be worth hundreds of millions of dollars at todayâs exchange rate. On October 1-st 2013, the {FBI} arrested a 29 year old person named Ross William Ulbricht, claiming that he is {DPR}, and seizing a small fraction of his bitcoin wealth. In this paper we use the publicly available record to trace the evolution of his holdings in order to find how he acquired and how he tried to hide them from the authorities. In particular, we trace the amounts he seemingly received and the amounts he seemingly transferred out of his accounts, and show that all his Silk Road commissions from the months of May, June and September 2013, along with numerous other amounts, were not seized by the {FBI}. This analysis demonstrates the power of data mining techniques in analyzing large payment systems, and especially publicly available transaction graphs of the type provided by the Bitcoin scheme.},
	pages = {3--15},
	booktitle = {Financial Cryptography and Data Security},
	publisher = {Springer},
	author = {Ron, Dorit and Shamir, Adi},
	editor = {BÃ¶hme, Rainer and Brenner, Michael and Moore, Tyler and Smith, Matthew},
	date = {2014},
	langid = {english},
	keywords = {Bitcoin, {DPR}, Dread pirate roberts, Silk road},
	file = {Springer Full Text PDF:/home/carlazz/Zotero/storage/DNY2TS6C/Ron and Shamir - 2014 - How Did Dread Pirate Roberts Acquire and Protect h.pdf:application/pdf}
}

@inproceedings{moore_postmodern_2012,
	title = {The postmodern Ponzi scheme: Empirical analysis of high-yield investment programs},
	shorttitle = {The postmodern Ponzi scheme},
	pages = {41--56},
	booktitle = {International Conference on financial cryptography and data security},
	publisher = {Springer},
	author = {Moore, Tyler and Han, Jie and Clayton, Richard},
	date = {2012},
	file = {Full Text:/home/carlazz/Zotero/storage/EP7M8J3P/Moore et al. - 2012 - The postmodern Ponzi scheme Empirical analysis of.pdf:application/pdf;Snapshot:/home/carlazz/Zotero/storage/CUV8F5SG/978-3-642-32946-3_4.html:text/html}
}

@online{noauthor_postmodern_nodate,
	title = {The Postmodern Ponzi Scheme: Empirical Analysis of High-Yield Investment Programs {\textbar} Semantic Scholar},
	url = {/paper/The-Postmodern-Ponzi-Scheme%3A-Empirical-Analysis-of-Moore-Han/82f93545829668dd12baefbb9306cb4da6bf5700},
	shorttitle = {The Postmodern Ponzi Scheme},
	abstract = {A High Yield Investment Program ({HYIP}) is an online Ponzi scheme, a financial fraud that pays outrageous levels of interest using money from new investors. We call this fraud âpostmodernâ in that sophisticated investors understand the fraud, but hope to profit by joining early. These investors support âaggregatorsâ â reputation websites that track the status of {HYIPs}. We examine 9 months of aggregator data and show that there is no evidence of collusion between different aggregators. We use their data to measure the time until {HYIPs} collapse, finding â perhaps unsurprisingly â that longer lifetimes are associated with lower interest payments and longer mandatory investment terms. We look at the role of digital currencies in supporting {HYIPs}, finding that a handful of systems dominate. Finally, we estimate that this type of criminality is turning over at least \$6 million/month and set out ways in which it might be disrupted.},
	urldate = {2020-02-23},
	langid = {english},
	file = {Snapshot:/home/carlazz/Zotero/storage/RPMFHTKI/82f93545829668dd12baefbb9306cb4da6bf5700.html:text/html}
}

@article{nakamoto_bitcoin_nodate,
	title = {Bitcoin: A Peer-to-Peer Electronic Cash System},
	abstract = {A purely peer-to-peer version of electronic cash would allow online payments to be sent directly from one party to another without going through a financial institution. Digital signatures provide part of the solution, but the main benefits are lost if a trusted third party is still required to prevent double-spending. We propose a solution to the double-spending problem using a peer-to-peer network. The network timestamps transactions by hashing them into an ongoing chain of hash-based proof-of-work, forming a record that cannot be changed without redoing the proof-of-work. The longest chain not only serves as proof of the sequence of events witnessed, but proof that it came from the largest pool of {CPU} power. As long as a majority of {CPU} power is controlled by nodes that are not cooperating to attack the network, they'll generate the longest chain and outpace attackers. The network itself requires minimal structure. Messages are broadcast on a best effort basis, and nodes can leave and rejoin the network at will, accepting the longest proof-of-work chain as proof of what happened while they were gone.},
	pages = {9},
	author = {Nakamoto, Satoshi},
	langid = {english},
	file = {Nakamoto - Bitcoin A Peer-to-Peer Electronic Cash System.pdf:/home/carlazz/Zotero/storage/UD5IB8AV/Nakamoto - Bitcoin A Peer-to-Peer Electronic Cash System.pdf:application/pdf}
}

@inproceedings{sas_design_2017,
	title = {Design for trust: An exploration of the challenges and opportunities of bitcoin users},
	shorttitle = {Design for trust},
	pages = {6499--6510},
	booktitle = {Proceedings of the 2017 {CHI} Conference on Human Factors in Computing Systems},
	author = {Sas, Corina and Khairuddin, Irni Eliana},
	date = {2017},
	file = {Snapshot:/home/carlazz/Zotero/storage/5NIUXX8W/3025453.html:text/html}
}

@online{noauthor_avoid_nodate,
	title = {Avoid Scams - Bitcoin},
	url = {https://bitcoin.org/en/scams},
	urldate = {2020-02-23},
	langid = {english},
	file = {Snapshot:/home/carlazz/Zotero/storage/TYHVL9SZ/scams.html:text/html}
}

@report{noauthor_proactive_2012,
	title = {Proactive Policy Measures by Internet Service Providers against Botnets},
	url = {https://www.oecd-ilibrary.org/science-and-technology/proactive-policy-measures-by-internet-service-providers-against-botnets_5k98tq42t18w-en},
	number = {199},
	type = {{OECD} Digital Economy Papers},
	urldate = {2020-02-23},
	date = {2012-05-07},
	langid = {english},
	doi = {10.1787/5k98tq42t18w-en},
	file = {2012 - Proactive Policy Measures by Internet Service Prov.pdf:/home/carlazz/Zotero/storage/ZFLAGYLD/2012 - Proactive Policy Measures by Internet Service Prov.pdf:application/pdf}
}

@article{asghari_economics_2015,
	title = {Economics of Fighting Botnets: Lessons from a Decade of Mitigation},
	volume = {13},
	issn = {1558-4046},
	doi = {10.1109/MSP.2015.110},
	shorttitle = {Economics of Fighting Botnets},
	abstract = {The fight against botnets has been going on for more than a decade, but they still impose significant costs. {ISPs} have become increasingly central to the effort, as they can undertake mitigation more economically and efficiently than end users. A study evaluates the role and performance of {ISPs} in botnet mitigation across 60 countries.},
	pages = {16--23},
	number = {5},
	journaltitle = {{IEEE} Security Privacy},
	author = {Asghari, Hadi and van Eeten, Michel J.G. and Bauer, Johannes M.},
	date = {2015-09},
	keywords = {invasive software, Computer security, Malware, security, Biological system modeling, botnet mitigation, botnets, Botnets, Broadband communication, computer security, economics, Economics, incentives, Internet service providers, {IP} networks, {ISP}, malware, network security, socio-economic effects},
	file = {IEEE Xplore Abstract Record:/home/carlazz/Zotero/storage/S9UHKPGQ/7310846.html:text/html}
}

@inproceedings{pijpker_role_2016,
	title = {The Role of Internet Service Providers in Botnet Mitigation},
	doi = {10.1109/EISIC.2016.013},
	abstract = {We studied how Internet Service Providers ({ISPs}) are involved in botnet mitigation in the Netherlands. Although Dutch {ISPs} on average perform very well with respect to botnet mitigation, botnets still are a significant threat and many end-user systems are infected by bot-malware. We created a reference model which summarizes measures for botnet mitigation from scientific literature that {ISPs} can take. Our model is structured according to the five stages in the anti-botnet lifecycle: prevention, detection, notification, remediation, and recovery. We validated our reference model in an empirical study by means of semi-structured interviews with a representative sample of Dutch {ISPs}. Our study identified which measures actually have been taken by {ISPs}, and why other measures have not been taken (yet). It became clear that {ISPs} spend most effort on prevention and notification towards customers, thereby focusing on individual bots. {ISPs} currently have little incentive to implement further measures for detection, remediation, and recovery. Although {ISPs} are well capable of applying advanced detection and follow up actions, they do not apply such measures mainly due to privacy concerns of customer data. Furthermore, although {ISPs} do cooperate in various ways, there still is room for improvement, particularly in the sharing of information on botnet infections and mitigation practices with stakeholders and peer {ISPs}.},
	eventtitle = {2016 European Intelligence and Security Informatics Conference ({EISIC})},
	pages = {24--31},
	booktitle = {2016 European Intelligence and Security Informatics Conference ({EISIC})},
	author = {Pijpker, Jeroen and Vranken, Harald},
	date = {2016-08},
	note = {{ISSN}: null},
	keywords = {invasive software, Computer security, Internet, data privacy, botnet mitigation, Internet service providers, anti-botnet lifecycle, antibotnet lifecycle, bot-malware, botnet, botnet detection, botnet infections, botnet notification, botnet prevention, botnet recovery, botnet remediation, Computers, customer data privacy concern, cyber security, Dutch {ISP}, information sharing, internet service provider, Law, Netherlands, Organizations},
	file = {IEEE Xplore Abstract Record:/home/carlazz/Zotero/storage/W3LLC9FU/7870186.html:text/html;IEEE Xplore Full Text PDF:/home/carlazz/Zotero/storage/XQV35KCL/Pijpker and Vranken - 2016 - The Role of Internet Service Providers in Botnet M.pdf:application/pdf}
}

@online{noauthor_role_nodate,
	title = {The Role of Internet Service Providers in Botnet Mitigation {\textbar} Semantic Scholar},
	url = {/paper/The-Role-of-Internet-Service-Providers-in-Botnet-Pijpker-Vranken/1be976d1f91cf16b8173e7c5807a50ff223e023b},
	abstract = {We studied how Internet Service Providers ({ISPs}) are involved in botnet mitigation in the Netherlands. Although Dutch {ISPs} on average perform very well with respect to botnet mitigation, botnets still are a significant threat and many end-user systems are infected by bot-malware. We created a reference model which summarizes measures for botnet mitigation from scientific literature that {ISPs} can take. Our model is structured according to the five stages in the anti-botnet lifecycle: prevention, detection, notification, remediation, and recovery. We validated our reference model in an empirical study by means of semi-structured interviews with a representative sample of Dutch {ISPs}. Our study identified which measures actually have been taken by {ISPs}, and why other measures have not been taken (yet). It became clear that {ISPs} spend most effort on prevention and notification towards customers, thereby focusing on individual bots. {ISPs} currently have little incentive to implement further measures for detection, remediation, and recovery. Although {ISPs} are well capable of applying advanced detection and follow up actions, they do not apply such measures mainly due to privacy concerns of customer data. Furthermore, although {ISPs} do cooperate in various ways, there still is room for improvement, particularly in the sharing of information on botnet infections and mitigation practices with stakeholders and peer {ISPs}.},
	urldate = {2020-02-23},
	langid = {english},
	file = {Snapshot:/home/carlazz/Zotero/storage/5H5FDLQ8/1be976d1f91cf16b8173e7c5807a50ff223e023b.html:text/html}
}

@inproceedings{van_eeten_role_2010,
	title = {The role of internet service providers in botnet mitigation an empirical analysis based on spam data},
	publisher = {{TPRC}},
	author = {Van Eeten, Michel and Bauer, Johannes M. and Asghari, Hadi and Tabatabaie, Shirin and Rand, David},
	date = {2010},
	file = {Full Text:/home/carlazz/Zotero/storage/DG2VRUJ8/Van Eeten et al. - 2010 - The role of internet service providers in botnet m.pdf:application/pdf;Snapshot:/home/carlazz/Zotero/storage/Y8JPVVCB/papers.html:text/html}
}

@inproceedings{wondracek_is_2010,
	title = {Is the Internet for Porn? An Insight Into the Online Adult Industry.},
	shorttitle = {Is the Internet for Porn?},
	booktitle = {{WEIS}},
	author = {Wondracek, Gilbert and Holz, Thorsten and Platzer, Christian and Kirda, Engin and Kruegel, Christopher},
	date = {2010},
	file = {Full Text:/home/carlazz/Zotero/storage/CMX2J5IT/Wondracek et al. - 2010 - Is the Internet for Porn An Insight Into the Onli.pdf:application/pdf}
}

@inproceedings{vasek_theres_2015,
	title = {Thereâs no free lunch, even using Bitcoin: Tracking the popularity and profits of virtual currency scams},
	shorttitle = {Thereâs no free lunch, even using Bitcoin},
	pages = {44--61},
	booktitle = {International conference on financial cryptography and data security},
	publisher = {Springer},
	author = {Vasek, Marie and Moore, Tyler},
	date = {2015},
	file = {Full Text:/home/carlazz/Zotero/storage/A3BN8NJI/Vasek and Moore - 2015 - Thereâs no free lunch, even using Bitcoin Trackin.pdf:application/pdf;Snapshot:/home/carlazz/Zotero/storage/5ANUK4T8/978-3-662-47854-7_4.html:text/html}
}

@article{anderson_information_2009,
	title = {Information security: where computer science, economics and psychology meet},
	volume = {367},
	shorttitle = {Information security},
	pages = {2717--2727},
	number = {1898},
	journaltitle = {Philosophical Transactions of the Royal Society A: Mathematical, Physical and Engineering Sciences},
	author = {Anderson, Ross and Moore, Tyler},
	date = {2009},
	file = {Full Text:/home/carlazz/Zotero/storage/UJK8KCFL/Anderson and Moore - 2009 - Information security where computer science, econ.pdf:application/pdf;Snapshot:/home/carlazz/Zotero/storage/LB5LTPRM/rsta.2009.html:text/html}
}

@article{anderson_measuring_2019,
	title = {Measuring the changing cost of cybercrime},
	author = {Anderson, Ross and Barton, Chris and BÃ¶lme, Rainer and Clayton, Richard and GanÃ¡n, Carlos and Grasso, Tom and Levi, Michael and Moore, Tyler and Vasek, Marie},
	date = {2019},
	file = {Full Text:/home/carlazz/Zotero/storage/9NV9VN78/Anderson et al. - 2019 - Measuring the changing cost of cybercrime.pdf:application/pdf;Snapshot:/home/carlazz/Zotero/storage/Q8PD9T37/122684.html:text/html}
}

@incollection{anderson_measuring_2013,
	title = {Measuring the cost of cybercrime},
	pages = {265--300},
	booktitle = {The economics of information security and privacy},
	publisher = {Springer},
	author = {Anderson, Ross and Barton, Chris and BÃ¶hme, Rainer and Clayton, Richard and Van Eeten, Michel {JG} and Levi, Michael and Moore, Tyler and Savage, Stefan},
	date = {2013},
	file = {Full Text:/home/carlazz/Zotero/storage/XSABYKKN/Anderson et al. - 2013 - Measuring the cost of cybercrime.pdf:application/pdf;Snapshot:/home/carlazz/Zotero/storage/JYEZVUKX/978-3-642-39498-0_12.html:text/html}
}

@online{noauthor_add_nodate,
	title = {Add {DTrace} function tracing support Â· nicomazz/perfetto@2ba0fd7},
	url = {https://github.com/nicomazz/perfetto/commit/2ba0fd798950bd0a59f9f72a55f9bc48208d1694},
	urldate = {2020-03-07},
	file = {Add DTrace function tracing support Â· nicomazz/perfetto@2ba0fd7:/home/carlazz/Zotero/storage/N632IZ6Z/2ba0fd798950bd0a59f9f72a55f9bc48208d1694.html:text/html}
}

@online{noauthor_google-wide_nodate,
	title = {Google-Wide Profiling: A Continuous Profiling Infrastructure for Data Centers â Google Research},
	url = {https://research.google/pubs/pub36575/},
	urldate = {2020-03-09}
}

@online{noauthor_dtrace_2008,
	title = {{DTrace} Test Suite at {OpenSolaris}.org},
	url = {https://web.archive.org/web/20081221064756/http://www.opensolaris.org/os/community/dtrace/dtest/},
	urldate = {2020-03-17},
	date = {2008-12-21},
	file = {Snapshot:/home/carlazz/Zotero/storage/TJLUPVFS/dtest.html:text/html}
}

@online{noauthor_sync_nodate,
	title = {sync [Zotero Documentation]},
	url = {https://www.zotero.org/support/sync},
	urldate = {2020-03-26},
	file = {sync [Zotero Documentation]:/home/carlazz/Zotero/storage/8TV5E6UE/sync.html:text/html}
}

@online{noauthor_internet_nodate,
	title = {Internet Census 2012},
	url = {http://census2012.sourceforge.net/paper.html},
	urldate = {2020-03-31}
}

@article{dittrich_internet_2015,
	title = {The Internet Census 2012 Dataset: An Ethical Examination},
	volume = {34},
	doi = {10.1109/MTS.2015.2425592},
	shorttitle = {The Internet Census 2012 Dataset},
	abstract = {The default password problem (an ?admin? account having the password ?admin,? or a system with no password on certain default accounts), has been around as long as computer systems have been sold and shipped to unsuspecting new owners. This problem was mentioned on Usenet as early as 1994, regarding Silicon Graphic Irix ({SGI}) workstations and reported to {SGI} (who did nothing to fix the problem until years later, after the Computer Emergency Response Team Coordination Center ({CERT}/{CC}) released a security advisory about the problem [1]). As the Internet became widely used, the problem extended to generally weak or trivially guessable passwords, including both the published default passwords, and commonly chosen simple passwords like ?12345,? ?password,? or ?opensesame.? Users choose weak passwords, ignoring or despite nearly two decades of knowledge indicating how problematic weak passwords are in terms of security. Corporations and software developers continue to release Internet-accessible systems with weak passwords.},
	pages = {40--46},
	journaltitle = {Technology and Society Magazine, {IEEE}},
	shortjournal = {Technology and Society Magazine, {IEEE}},
	author = {Dittrich, David and Carpenter, Katherine and Karir, Manish},
	date = {2015-06-01}
}

@article{pollard_quameleon_2019,
	title = {Quameleon: A Lifter and Intermediate Language for Binary Analysis},
	abstract = {We present Quameleon, an analysis framework for lowlevel programs. Quameleon is takes as input a program in binary or assembly language format and translates, or âliftsâ this program into an intermediate representation called the Quameleon Intermediate Language ({QIL}) which is then amenable for analysis. The primary features of {QIL} are: all operations are parametric over the bit sizes on which they operate and a value can take on any type. These allow us to keep the core language of {QIL} small and allow us to treat memory and register values as logical formulae, for example, in order to support symbolic execution. We discuss the design of {QIL} and Quameleon and how they support analysis. {CCS} Concepts â¢ Software and its engineering â Formal software verification.},
	pages = {4},
	author = {Pollard, Samuel D and Johnson-Freyd, Philip and Aytac, Jon and Duckworth, Tristan and Carson, Michael J and Hulette, Geoffrey Compton and Harrison, Christopher B},
	date = {2019},
	langid = {english},
	file = {Pollard et al. - 2019 - Quameleon A Lifter and Intermediate Language for .pdf:/home/carlazz/Zotero/storage/BM6RZQXQ/Pollard et al. - 2019 - Quameleon A Lifter and Intermediate Language for .pdf:application/pdf}
}

@online{noauthor_executable_2018,
	title = {Executable and Linkable Format 101 Part 3: Relocations},
	url = {https://intezer.com/blog/elf/executable-and-linkable-format-101-part-3-relocations/},
	shorttitle = {Executable and Linkable Format 101 Part 3},
	abstract = {In this post we will introduce the concept of relocations and its relationship with symbols. By the end of this post, the reader will be ready to understand more advanced concepts, such as dynamic linking.},
	titleaddon = {Intezer},
	urldate = {2020-04-15},
	date = {2018-04-23},
	langid = {american},
	file = {Snapshot:/home/carlazz/Zotero/storage/6S2RIHSA/2018 - Executable and Linkable Format 101 Part 3 Relocat.html:text/html}
}

@online{noauthor_extended_nodate,
	title = {Extended Asm (Using the {GNU} Compiler Collection ({GCC}))},
	url = {https://gcc.gnu.org/onlinedocs/gcc/Extended-Asm.html#Clobbers-and-Scratch-Registers},
	urldate = {2020-04-11}
}

@online{noauthor_53_nodate,
	title = {5.3.Â The {MIPS} Register Files},
	url = {http://www.cs.uwm.edu/classes/cs315/Bacon/Lecture/HTML/ch05s03.html#mips_regs_convention},
	urldate = {2020-04-11}
}

@online{noauthor_extended_nodate-1,
	title = {Extended Asm (Using the {GNU} Compiler Collection ({GCC}))},
	url = {https://gcc.gnu.org/onlinedocs/gcc/Extended-Asm.html#Clobbers-and-Scratch-Registers},
	urldate = {2020-04-11}
}
